{
  "hash": "a307b25e617522776dcc6c669af15d83",
  "result": {
    "markdown": "---\ntitle: \"Data visualization 1\"\ndate: 09/07/2023\nauthor: \n    - Katie Schuler\n\n---\n\n\n::: {.callout-warning title=\"Under Construction\"}\n:::\n\n## Acknowledgements \n\nToday's lectures notes and [slides](/slides/data-visualization.qmd) were influenced by and adapted from [Ch 2 in R for Data Science]() and various materials by Dr. Colin Rundel at Duke\n\n## Why visualize data? \n\n> \"Visualization is a fundamentally human activity. A good visualization will show you things you did not expect or raise new questions about the data. A good visualization might also hint that you’re asking the wrong question or that you need to collect different data.\" -- R for Data Science\n\n\n\n\n\n## Data visualization with ggplot2\n<!---\n \nPrerequisite packages. ggplot part of tidyverse package. Already installed on Google Colab's R; just use library.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the tidyverse and palmer penguins libraries\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n:::\n\n\n\nWe will also be using palmerpenguins package; show here how to use glimpse() to get a look or head() -- can also show on Tue \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\nplot we want to replicate: \n\nhere \n\nStart with data layer; \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins) \n```\n\n::: {.cell-output-display}\n![](data-visualization-delete_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nsample basic plot: \n\n\n::: {.cell}\n\n:::\n\n \n--->\n\nthree main parts: \n\n- **data**- your (tidy) data\n- **aesthetic mappings (aes)** - make data visible\n- **geometric objects** - \n\nother layers: \n\n- **facets** \n- **statistics** - statistical transformations of data\n- **scales** - map data values to visual values of aestetic\n- coordinates\n- **themes** - overall visuals\n\nspecial notes for Google Colab: \n- setting size \n\n\n\n## Aesthetic mappings\n\nPractical example: \n- adding type of penguins \n\n\n\n\n**aesthetic mappings** (aes), make data visible\n\n- `x`, `y`: variable on x and y axis\n- `color`: outline color of geom\n- `fill`: fill color of geom\n- `group`: group geom belongs to\n- `shape`: shape used to plot point (circle, square, etc)\n- `linetype`: type of line used (solid, dash, et)\n- `size`\n\n## Geometric objects\n\n\n**geometric objects (geoms)** - type of plot\n\n- show adding geom_smooth \n\n\n\n## Additional layers\n\nWe'll cover some in the class: \n- adding labels \n- adding theme\n- adding fill \n\n- **facets**\n    - `facet_grid(.~var1)`\n    - `facet_grid(var2~.)`\n    - `facet_grid(var2~var1)`\n    - `facet_wrap(~var1)` - wrap facets\n    - \"scales\"? \n- **coordinates**\n    - `coord_cartesian(xlim=c(0,5))` - xlim, ylim\n    - `coord_flip()`\n- **labels** \n    - `labs(title=\"plot title\")` - x, y, subtitle\n    - `annotate()`\n- **statistics**\n- **scales**\n- **position adjustments**\n- **themes**\n    - `theme(legend.position=\"bottom\")`\n\n## Saving plots \n\nHelper functions: \n\n- `last_plot()` - returns the last plot\n- `ggsave(\"plot.png\", width=5, height=5)` - saves last plot\n\n### Further reading and references\n\nUseful resources:\n\n- ggplot cheat sheet\n- [introduction to palmerpenguins](https://allisonhorst.github.io/palmerpenguins/articles/intro.html) \n\nRecommended further reading: \n\n- [Ch 2 Data visualization](https://r4ds.hadley.nz/data-visualize) in R for Data Science\n- https://moderndive.com/2-viz.html\n- [Layers](https://r4ds.hadley.nz/layers) in R for Data Science\n\n\nOther references: \n\n- https://r.qcbs.ca/workshop03/book-en/the-basics-of-visualizing-data.html\n- https://r4ds.hadley.nz/layers\n\n",
    "supporting": [
      "data-visualization-delete_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}