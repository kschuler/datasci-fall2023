{
  "hash": "ea0a2bcf96c7f47ee42771e47b399b30",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nsubtitle: \"Data Science for Studying Language and the Mind\"\nauthor: Katie Schuler\ndate: 09-07-2023\necho: true\nformat: \n    revealjs:\n        theme: dark\n        slide-number: true\n        incremental: true \n        footer: \"[https://kathrynschuler.com/datasci](https://kathrynschuler.com/datasci/)\"\n---\n\n\n## You are `here` {.smaller} \n\n:::: {.columns}\n\n::: {.column width=\"33%\"}\n\n##### Data science with R \n::: {.nonincremental}\n- Hello, world!\n- R basics\n- Data importing\n- `Data visualization` \n- Data wrangling \n:::\n:::\n\n::: {.column width=\"33%\"}\n\n##### Stats & Model buidling\n::: {.nonincremental}\n- Probability distributions\n- Sampling variability\n- Hypothesis testing\n- Model specification\n- Model fitting \n- Model accuracy\n- Model reliability\n:::\n:::\n\n::: {.column width=\"33%\"}\n\n##### More advanced \n::: {.nonincremental}\n\n- Classification\n- Feature engineering (preprocessing) \n- Inference for regression\n- Mixed-effect models\n::: \n:::\n\n::::\n\n# Acknowledgements\n\nAdapted from [R for Data Science Ch 2](https://r4ds.hadley.nz/data-visualize)\nand some materials by Dr. Colin Rundel at Duke\n\n\n## Why visualize? \n\n> “The simple graph has brought more information to the data analyst’s mind than any other device.” — John Tukey\n\n## Datasaurus dozen {.smaller}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 6\n   dataset    mean_x mean_y std_dev_x std_dev_y corr_x_y\n   <chr>       <dbl>  <dbl>     <dbl>     <dbl>    <dbl>\n 1 away         54.3   47.8      16.8      26.9  -0.0641\n 2 bullseye     54.3   47.8      16.8      26.9  -0.0686\n 3 circle       54.3   47.8      16.8      26.9  -0.0683\n 4 dino         54.3   47.8      16.8      26.9  -0.0645\n 5 dots         54.3   47.8      16.8      26.9  -0.0603\n 6 h_lines      54.3   47.8      16.8      26.9  -0.0617\n 7 high_lines   54.3   47.8      16.8      26.9  -0.0685\n 8 slant_down   54.3   47.8      16.8      26.9  -0.0690\n 9 slant_up     54.3   47.8      16.8      26.9  -0.0686\n10 star         54.3   47.8      16.8      26.9  -0.0630\n11 v_lines      54.3   47.8      16.8      26.9  -0.0694\n12 wide_lines   54.3   47.8      16.8      26.9  -0.0666\n13 x_shape      54.3   47.8      16.8      26.9  -0.0656\n```\n:::\n:::\n\n\n\n::: aside\nDatasaurus was created by Alberto Cairo, `library(datasauRus)`\n:::\n\n## Datasaurus dozen {.smaller}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n\n::: aside\nDatasaurus was created by Alberto Cairo\n:::\n\n\n\n## Why visualize? \n\n> \"`Visualization` is a fundamentally human activity. A good visualization will show you things you did not expect or raise new questions about the data. A good visualization might also hint that you’re asking the wrong question or that you need to collect different data. Visualizations can surprise you, but they don’t scale particularly well because they require a human to interpret them.\" -- R4DS\n\n--- \n\n![](/include/figures/ggplot-hexlogo.png){#fig-ggplothexlogo fig-align=\"center\" width=20%}\n\n## ggplot2 loads with tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n## Why ggplot2? \n\n> \"R has several systems for making graphs, but ggplot2 is one of the most elegant and most versatile. ggplot2 implements the `grammar of graphics`, a coherent system for describing and building graphs. With ggplot2, you can do more and faster by learning one system and applying it in many places.\" -- R4DS\n\n\n\n## Today's data: `ratings` {.smaller}\n\n> Subjective frequency ratings, ratings of estimated weight, and ratings of estimated size, averaged\nover subjects, for 81 concrete English nouns. -- languageR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(languageR)\nglimpse(ratings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 81\nColumns: 14\n$ Word             <fct> almond, ant, apple, apricot, asparagus, avocado, badg…\n$ Frequency        <dbl> 4.204693, 5.347108, 6.304449, 3.828641, 3.663562, 3.4…\n$ FamilySize       <dbl> 0.0000000, 1.3862944, 1.0986123, 0.0000000, 0.0000000…\n$ SynsetCount      <dbl> 1.0986123, 1.0986123, 1.0986123, 1.3862944, 1.0986123…\n$ Length           <int> 6, 3, 5, 7, 9, 7, 6, 6, 3, 6, 3, 8, 10, 9, 8, 5, 9, 5…\n$ Class            <fct> plant, animal, plant, plant, plant, plant, animal, pl…\n$ FreqSingular     <int> 24, 69, 315, 26, 19, 24, 53, 74, 155, 37, 118, 15, 26…\n$ FreqPlural       <int> 42, 140, 231, 19, 19, 6, 78, 77, 103, 14, 180, 19, 31…\n$ DerivEntropy     <dbl> 0.0000, 0.5620, 0.4960, 0.0000, 0.0000, 0.0000, 0.634…\n$ Complex          <fct> simplex, simplex, simplex, simplex, simplex, simplex,…\n$ rInfl            <dbl> -0.54232429, -0.70026465, 0.30900484, 0.30010459, 0.0…\n$ meanWeightRating <dbl> 1.4860, 3.3489, 2.1948, 1.3216, 1.4424, 1.3256, 3.047…\n$ meanSizeRating   <dbl> 1.8912, 3.6275, 2.4730, 1.7597, 1.8660, 1.7737, 3.369…\n$ meanFamiliarity  <dbl> 3.72, 3.60, 5.84, 4.40, 3.68, 4.12, 2.12, 5.68, 3.20,…\n```\n:::\n:::\n\n\n## Today's data: `ratings` {.smaller}\n\nWe will make use of the following variables:\n\n1. `Frequency` - actual word frequency\n2. `meanFamiliarity` - subjective frequency rating\n3. `Class` - whether word is a plant or animal\n\n. . . \n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 81\nColumns: 4\n$ Word            <fct> almond, ant, apple, apricot, asparagus, avocado, badge…\n$ Frequency       <dbl> 4.204693, 5.347108, 6.304449, 3.828641, 3.663562, 3.43…\n$ meanFamiliarity <dbl> 3.72, 3.60, 5.84, 4.40, 3.68, 4.12, 2.12, 5.68, 3.20, …\n$ Class           <fct> plant, animal, plant, plant, plant, plant, animal, pla…\n```\n:::\n:::\n\n\n## Today's goal {.smaller}\n\nCreate this figure showing the relationship between actual frequency and subjective frequency rating of each word, considering the class the word belongs to\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n# The basic ggplot\n\n1. Using your `data`\n2. define how variables in your dataset are mapped to visual properties (`aesthetics`)\n3. determine the geometrical object that a plot uses to represent data (`geom`)\n\n\n\n## 1 `data` {.smaller}\n\n> Use `ratings` data\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-3\"}\nggplot(\n    data = ratings\n )\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## 2 `aesthetic mapping` {.smaller}\n\n> Map `Frequency` to x-axis and `meanFamiliarity` to y-axis. \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3-6\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n )\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## 3 `geom` {.smaller}\n\n> Represent each value with a point.\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n# Adding to the basics\n\n## Mapping categorical variables {.smaller}\n\n> When a categorical variable is mapped to an aesthetic, ggplot2 will automatically assign a unique value of the aesthetic (here color) ... a process known as `scaling`. -- R4DS\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity,\n        color = Class\n    )\n ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n## Global vs. local `aesthetics` {.smaller}\n\n- **globally** in `ggplot()`, which are passed down to all geoms\n- **locally** in `geom_*()` which are used by that geom only\n\n. . . \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class)\n    ) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n\n## Mapping vs. setting `aesthetics` {.smaller}\n\n- mapping allows us to determine a geom's aesthetics based on a variable, and is passed as argument in `aes()`\n- setting allows us to set a geom's aestheics to a constant value (not based on any variable), and passed as argument in `geom_*()` directly\n\n. . . \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class), \n    size = 3\n    ) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n\n# Labels\n\n\n## `labels`: title and subtitle {.smaller}\n\n> Add title \"Subjective frequency ratings\" with subtitle \"for 81 english nouns\"\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12-15\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class), \n    size = 3\n    ) +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\"\n  ) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## `labels`: x and y axis {.smaller}\n\n> Label x-axis \"Actual frequency\" and y-axis \"Frequency rating\"\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"15-16\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class), \n    size = 3\n    ) +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\"\n  ) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n::: aside \nNote these are mapped to the aesthetic (x and y)\n:::\n\n## `labels`: legend {.smaller}\n\n> Label the legend \"word class\".\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"17\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class), \n    size = 3\n    ) +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n::: aside \nNote these are mapped to the aesthetic as well (color)\n:::\n\n# Theme and adjusting scaling\n\n## `themes` {.smaller}\n\n> Apply classic theme with base_size 20.\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"19\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class), \n    size = 3\n    ) +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## `scales`: changing color {.smaller}\n\n> Remember: When a categorical variable is mapped to an aesthetic, ggplot2 will automatically assign a unique value of the aesthetic (here color) ... a process known as `scaling`. -- R4DS\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"20\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class), \n    size = 3\n    ) +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) +\n  scale_color_brewer(palette = \"Paired\")\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n# Aesthetics\n\n## color\n\nMap the color aesthetic to a variable\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class),\n    size = 3\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n## color\n\nSet a constant value for the color aesthetic \n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    color = \"blue\",\n    size = 3\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n\n\n## size \n\nSetting a constant value for the size aesthetic\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class),\n    size = 3\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n## size\n\nMapped the size aesthetic to a variable \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9-12\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(\n        color = Class,\n        size = Complex\n    ),\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n## shape\n\nMap the shape aesthetic to a different variable\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9-11\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(\n        color = Class,\n        shape = Complex),\n    size = 3\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n## shape \n\nMap the shape aesthetic to the same variable \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9-11\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(\n        color = Class,\n        shape = Class),\n    size = 3\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n\n## alpha \n\nSet a constant value for the alpha aesthetic\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(\n        color = Class,\n        shape = Class),\n    alpha = 0.5,\n    size = 3\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n## alpha\n\nMapped to a variable \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9-12\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(\n        color = Class,\n        shape = Class,\n        alpha = Length),\n    size = 3\n    ) +\n theme_classic(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\n# Geometric objects \n\n## `geom_*()` aka geoms {.smaller}\n\nThere are [many](https://ggplot2.tidyverse.org/reference/#geoms). We will start with these, and add a few additional geoms as we move through the course: \n\n| | |\n| --- | ------- | \n| `geom_histogram()` | histogram, distribution of a continuous variable |\n| `geom_density()` | distribution of a continuous variable |\n| `geom_bar()` | distribution of a categorical data | \n| `geom_point()` |  scatterplot |\n| `geom_smooth()` | smoothed line of best fit |\n\n## `geom_histogram()` \n\n> A histogram divides the x-axis into equally spaced bins and then uses the height of a bar to display the number of observations that fall in each bin. -- R4DS\n\n. . . \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity\n    )\n) + \n    geom_histogram() \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n## `geom_histogram()`\n\nbins - How many bins should we have? \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity\n    )\n) + \n    geom_histogram(\n        bins = 10\n    )\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n\n## `geom_histogram()`\n\nbinwidth - How wide should the bins be?  \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity\n    )\n) + \n    geom_histogram(\n        binwidth = 0.25\n    )\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n\n## `geom_histogram()`\n\ncolor - What should the outline color be? \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity\n    )\n) + \n    geom_histogram(\n        binwidth = 0.25,\n        color = \"red\"\n    )\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n\n## `geom_histogram()`\n\nfill - What should the fill color be? \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity\n    )\n) + \n    geom_histogram(\n        binwidth = 0.25,\n        color = \"red\",\n        fill = \"lightblue\"\n    )\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n## `geom_density()` {.smaller}\n\n> Imagine a histogram made out of wooden blocks. Then, imagine that you drop a cooked spaghetti string over it. The shape the spaghetti will take draped over blocks can be thought of as the shape of the density curve. -- R4DS \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity\n    )\n) + \n    geom_density() \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n## `geom_density()`\n\nMap Class to color aesthetic \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity,\n        color = Class\n    )\n) + \n    geom_density() \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n## `geom_density()`\n\nSet linewidth \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity,\n        color = Class\n    )\n) + \n    geom_density(linewidth = 2) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-33-1.png){width=960}\n:::\n:::\n\n\n## `geom_density()`\n\nMap Class to fill and set alpha \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = meanFamiliarity,\n        fill = Class\n    )\n) + \n    geom_density(alpha = 0.5) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n\n## `geom_bar()` {.smaller}\n\n> To examine the distribution of a categorical variable, you can use a bar chart. The height of the bars displays how many observations occurred with each x value. -- R4DS\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Class\n    )\n) + \n    geom_bar()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-35-1.png){width=960}\n:::\n:::\n\n\n## `geom_bar()` - stacked {.smaller}\n\nWe can use stacked bar plots to visualize the relationship between two categorical variables\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Class,\n        fill = Complex\n    )\n) + \n    geom_bar()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n## `geom_bar()` - relative frequency {.smaller}\n\nWe can use relative frequency to visualize the relationship between two categorical variables (as a percentage)\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Class,\n        fill = Complex\n    )\n) + \n    geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-37-1.png){width=960}\n:::\n:::\n\n\n## `geom_bar()` - dodged {.smaller}\n\nWe can use a dodged bar plot to visualize the relationship between two categorical variables side-by-side, not stacked\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Class,\n        fill = Complex\n    )\n) + \n    geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-38-1.png){width=960}\n:::\n:::\n\n\n## `geom_point()` {.smaller}\n\n> Scatterplots are useful for displaying the relationship between two numerical variables -- R4DS\n\n. . . \n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8-11\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    color = \"blue\", \n    size = 3\n    ) +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-39-1.png){width=960}\n:::\n:::\n\n\n## `geom_point()` with `geom_smooth()` {.smaller}\n\ndraws a best fitting curve \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    color = \"blue\", \n    size = 3\n    ) +\n  geom_smooth() +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-40-1.png){width=960}\n:::\n:::\n\n\n## `geom_point()` with `geom_smooth(method=\"lm\")` {.smaller}\n\ndraws the best fitting linear model\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    color = \"blue\", \n    size = 3\n    ) +\n  geom_smooth(method=\"lm\") +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-41-1.png){width=960}\n:::\n:::\n\n\n## `geom_point()` with `geom_smooth(method=\"lm\")` {.smaller}\n\nWe can also map to color, by specifying globally\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity,\n        color = Class\n    )\n ) +\n  geom_point( \n    size = 3\n    ) +\n  geom_smooth(method=\"lm\") +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-42-1.png){width=960}\n:::\n:::\n\n\n## `geom_point()` with `geom_smooth(method=\"lm\")` {.smaller}\n\nOr include only a single smooth, by specifying color in the point geom only\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    aes(color = Class),\n    size = 3\n    ) +\n  geom_smooth(method=\"lm\") +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-43-1.png){width=960}\n:::\n:::\n\n\n\n\n# Facets \n\nsmaller plots that display different subsets of data\n\n## `facet_grid()`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point() +\n  facet_grid(Class ~ Complex) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-44-1.png){width=960}\n:::\n:::\n\n\n## `facet_grid()` {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point() +\n  facet_grid(Class ~ Complex) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-45-1.png){width=960}\n:::\n:::\n\n\n. . . \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point(\n    aes(color = Class, shape = Complex)\n  ) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-46-1.png){width=960}\n:::\n:::\n\n\n\n## `facet_grid()` - just columns {.smaller}\n\nand note we can still map other aesthetics!\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point() +\n  facet_grid(. ~ Complex) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-47-1.png){width=960}\n:::\n:::\n\n\n## `facet_grid()` - just columns {.smaller}\n\nand note we can still map other aesthetics!\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8-11\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point(\n    aes(color = Class),\n    shape = \"triangle\"\n  ) +\n  facet_grid(. ~ Complex) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-48-1.png){width=960}\n:::\n:::\n\n\n\n\n## `facet_grid()` - just rows {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point() +\n  facet_grid(Class ~ .) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-49-1.png){width=960}\n:::\n:::\n\n\n\n## `facet_wrap()`  {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point() +\n  facet_wrap(~ Class) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-50-1.png){width=960}\n:::\n:::\n\n\n## `facet_wrap()` - number of columns {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point() +\n  facet_wrap(~ Class, ncol = 1) +\n  theme_classic(base_size = 20) \n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-51-1.png){width=960}\n:::\n:::\n\n\n# Helper functions \n\n## remember our goal plot? {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency, \n        y = meanFamiliarity\n    )\n ) +\n  geom_point( \n    mapping = aes(color = Class), \n    size = 3\n    ) +\n  labs(\n    title = \"Subjective frequency ratings\", \n    subtitle = \"for 81 english nouns\",\n    x = \"Actual frequency\",\n    y = \"Frequency rating\",\n    color = \"word class\"\n  ) +\n  theme_classic(base_size = 20) +\n  scale_color_brewer(palette = \"Paired\")\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-52-1.png){width=960}\n:::\n:::\n\n\n## `last_plot()` {.smaller}\n\nreturns the last plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_plot()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-53-1.png){width=960}\n:::\n:::\n\n\n## `ggsave()` \n\nsaves last plot\n\n```r\nggsave(\"plot.png\", width=5, height=5)\n```\n\n# Themes \n\nggplot comes with many [Complete themes](https://ggplot2.tidyverse.org/reference/ggtheme.html)\n\n## Default theme {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_plot() + theme_gray(base_size=20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-54-1.png){width=960}\n:::\n:::\n\n\n## Sample themes {.smaller}\n\n:::: {.columns}\n\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_plot() + theme_bw(base_size=20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-55-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_plot() + theme_classic(base_size=20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-56-1.png){width=960}\n:::\n:::\n\n\n::: \n\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_plot() + theme_minimal(base_size=20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-57-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_plot() + theme_void(base_size=20)\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-58-1.png){width=960}\n:::\n:::\n\n\n::: \n\n::::\n\n\n# Shortcuts \n\n## ggplot2 calls {.smaller}\n\n:::: {.columns}\n\n::: {.column width=50%}\n\nExplicit argument names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency,\n        y = meanFamiliarity\n    )\n) + \n   geom_point()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-59-1.png){width=960}\n:::\n:::\n\n\n\n::: \n\n\n::: {.column width=50%}\n\nImplied argument names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n    ratings,\n    aes(\n        x = Frequency,\n        y = meanFamiliarity\n    )\n) + \n   geom_point()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-60-1.png){width=960}\n:::\n:::\n\n\n::: \n\n::::\n\n\n## the pipe `%>%` {.smaller}\n\n> the pipe takes the thing on its left and passes it along to the function on its right \n\n. . .\n\n`x %>% f(y)` is equivalent to `f(x, y)`\n\n. . . \n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1.0, 2.245, 3, 4.22222)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.00000 2.24500 3.00000 4.22222\n```\n:::\n\n```{.r .cell-code}\n# pass x as an argument to function usual way\nround(x, digits = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.00 2.24 3.00 4.22\n```\n:::\n:::\n\n\n. . . \n\n::: {.cell}\n\n```{.r .cell-code}\n# pass x as an argument to function with pipe\nx %>% round(digits = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.00 2.24 3.00 4.22\n```\n:::\n:::\n\n\n\n::: aside\nThere are two ways to write the pipe: `%>%` or `|>`\n:::\n\n## the pipe `%>%` and ggplot {.smaller}\n\n\n:::: {.columns}\n\n::: {.column width=50%}\n\nImplied argument names:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(\n    data = ratings,\n    mapping = aes(\n        x = Frequency,\n        y = meanFamiliarity\n    )\n) + \n   geom_point()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-63-1.png){width=960}\n:::\n:::\n\n\n\n::: \n\n\n::: {.column width=50%}\n\nImplied argument names + pipe:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nratings %>% \nggplot(\n    aes(\n        x = Frequency,\n        y = meanFamiliarity\n    )\n) + \n   geom_point()\n```\n\n::: {.cell-output-display}\n![](data-visualization_files/figure-revealjs/unnamed-chunk-64-1.png){width=960}\n:::\n:::\n\n\n::: \n\n::::\n\n::: aside\nNote that we pipe `%>%` in arguments to functions but we ADD `+` layers to ggplot. Common mistake!\n:::\n\n## Exercise 1\n\n> The basic ggplot\n\n![Data from `penguins` dataframe in `palmerpenguins` package](/include/targets/class-target-basicpenguins.png){#fig-basicpenguintarget}\n\n## Exercise 2\n\n> Adding aesthetics and layers\n\n![Data from `penguins` dataframe in `palmerpenguins` package](/include/targets/class-target-penguins.png){#fig-penguintarget}",
    "supporting": [
      "data-visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}