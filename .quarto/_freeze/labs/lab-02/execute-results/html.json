{
  "hash": "f3fa9c1fc161b2338e9945d208368020",
  "result": {
    "markdown": "---\ntitle:  \"Lab 2: Import and visualize data\"\nsubtitle: \"Not graded, just practice\"\ndate:   2023-09-07\nauthor: Katie Schuler\n---\n\n::: {.cell}\n\n:::\n\n\n## Tidyverse\n\nWhat is the relationship between tidyverse and readr? \n\n\n<div class='webex-radiogroup' id='radio_QNQHOSWFTW'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QNQHOSWFTW\" value=\"\"></input> <span>tidyverse is a package in the readr family of packages</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QNQHOSWFTW\" value=\"answer\"></input> <span>readr is a package in the tidyverse family of packages</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QNQHOSWFTW\" value=\"\"></input> <span>tidyverse and readr are two unrelated packages</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QNQHOSWFTW\" value=\"\"></input> <span>tidyverse and reader are two names for the same package</span></label></div>\n\n\nIn the tidyverse, what does \"tidy data\" refer to? \n\n\n<div class='webex-radiogroup' id='radio_OKMENSXMJR'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_OKMENSXMJR\" value=\"\"></input> <span>any data we load into the tidyverse</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_OKMENSXMJR\" value=\"\"></input> <span>a dataset with no missing values</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_OKMENSXMJR\" value=\"answer\"></input> <span>a standard way to organize a dataset</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_OKMENSXMJR\" value=\"\"></input> <span>the process of cleaning a dataset</span></label></div>\n\n\nWhat is the purpose of the `purrr` package? \n\n\n<div class='webex-radiogroup' id='radio_SBAFNHHESP'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SBAFNHHESP\" value=\"\"></input> <span>Data visualization</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SBAFNHHESP\" value=\"\"></input> <span>Data wrangling</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SBAFNHHESP\" value=\"\"></input> <span>Data importing</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SBAFNHHESP\" value=\"answer\"></input> <span>Functional programming</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SBAFNHHESP\" value=\"\"></input> <span>All of the above</span></label></div>\n\n\nWhat is the primary purpose of the `readr` package? \n\n\n<div class='webex-radiogroup' id='radio_NGWFSYCHPY'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NGWFSYCHPY\" value=\"\"></input> <span>Data visualization</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NGWFSYCHPY\" value=\"\"></input> <span>Data wrangling</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NGWFSYCHPY\" value=\"answer\"></input> <span>Data importing</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NGWFSYCHPY\" value=\"\"></input> <span>Functional programming</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NGWFSYCHPY\" value=\"\"></input> <span>All of the above</span></label></div>\n\n\nWhich of the following returned this message? \n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n<div class='webex-radiogroup' id='radio_NZNSKBMAVN'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NZNSKBMAVN\" value=\"answer\"></input> <span>`library(tidyverse)`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NZNSKBMAVN\" value=\"\"></input> <span>`family(tidyverse)`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NZNSKBMAVN\" value=\"\"></input> <span>`library.collection(tidyverse)`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_NZNSKBMAVN\" value=\"\"></input> <span>`library(tidyverse, report=TRUE)`</span></label></div>\n\n\n\n## purrr \n\nSuppose we have the following tibble, stored with the variable `df`. What will `map(df, mean)` return? \n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n      x     y     z\n  <int> <int> <int>\n1     1     5     9\n2     2     6    10\n3     3     7    11\n4     4     8    12\n```\n:::\n:::\n\n<div class='webex-radiogroup' id='radio_PDJCRPEOUT'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PDJCRPEOUT\" value=\"\"></input> <span>the mean of each row</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PDJCRPEOUT\" value=\"answer\"></input> <span>the mean of each column</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PDJCRPEOUT\" value=\"\"></input> <span>the mean of all values</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PDJCRPEOUT\" value=\"\"></input> <span>Error: cannot compute mean of type integer</span></label></div>\n\n\n\nSuppose we wanted to coerce each column in the previous tibble to the data type `double` with one line of code. Fill in the two arguments to `map` that would accomplish this: \n\n- map(<input class='webex-solveme nospaces' size='10' data-answer='[\"df\"]'/>, <input class='webex-solveme nospaces' size='10' data-answer='[\"as.double\"]'/>)\n\n\n\n## Tibbles\n\nSuppose we run the following code block. What will `is.data.frame(tib)` return? \n\n```r\ntib <- tibble(x = 1:2, y = c(\"a\", \"b\"))\n```\n\n\n<div class='webex-radiogroup' id='radio_XZOJXXONRW'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_XZOJXXONRW\" value=\"answer\"></input> <span>True</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_XZOJXXONRW\" value=\"\"></input> <span>False</span></label></div>\n\n\nWhat will `typeof(tib)` return? \n\n\n<div class='webex-radiogroup' id='radio_QCJPIIDMYR'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QCJPIIDMYR\" value=\"\"></input> <span>double</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QCJPIIDMYR\" value=\"\"></input> <span>character</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QCJPIIDMYR\" value=\"\"></input> <span>&apos;double&apos; • &apos;character&apos;</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QCJPIIDMYR\" value=\"answer\"></input> <span>list</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QCJPIIDMYR\" value=\"\"></input> <span>tibble</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_QCJPIIDMYR\" value=\"\"></input> <span>data.frame</span></label></div>\n\n\nWhich of the following would convert a dataframe, `df`, to a tibble?  \n\n\n\n<div class='webex-radiogroup' id='radio_UOOIYPDVMB'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_UOOIYPDVMB\" value=\"answer\"></input> <span>`as_tibble(df)`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_UOOIYPDVMB\" value=\"\"></input> <span>`as.data.frame(df, tibble)`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_UOOIYPDVMB\" value=\"\"></input> <span>`tribble(df)`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_UOOIYPDVMB\" value=\"answer\"></input> <span>`df %>% as_tibble()`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_UOOIYPDVMB\" value=\"answer\"></input> <span>`df |> as_tibble()`</span></label></div>\n\n\nSuppose we run the following code, what will `is_tibble()` return? \n\n```r\nx <- tribble(\n    ~x, ~y, \n    2, 3, \n    4, 5\n)\n```\n\n\n<div class='webex-radiogroup' id='radio_JBVAQEJNTG'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_JBVAQEJNTG\" value=\"answer\"></input> <span>True</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_JBVAQEJNTG\" value=\"\"></input> <span>False</span></label></div>\n\n\n\n\nSuppose we create the following tibble, `tib`, what will `tib$a` return?\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n    age name   alt_name\n  <dbl> <chr>  <chr>   \n1     1 dory   dolores \n2     2 hazel  <NA>    \n3     3 graham <NA>    \n4     5 joan   joanie  \n```\n:::\n:::\n\n<div class='webex-radiogroup' id='radio_JFVSMMLHCY'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_JFVSMMLHCY\" value=\"answer\"></input> <span>a warning and the value NULL</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_JFVSMMLHCY\" value=\"\"></input> <span>`age` via partial matching</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_JFVSMMLHCY\" value=\"\"></input> <span>`age` and `alt_name` via partial matching</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_JFVSMMLHCY\" value=\"\"></input> <span>`hazel`, `graham`, `joan`, and `joanie` via partial matching</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_JFVSMMLHCY\" value=\"\"></input> <span>an empty vector</span></label></div>\n\n\n\n## readr \n\nMany questions below refer to this dataset, borrowed from R4DS and available at the url [https://pos.it/r4ds-students-csv](https://pos.it/r4ds-students-csv). \n\n![borrowed from R for Data Science](/include/figures/rectangle-data.png){#fig-rectangledata fig-align=\"center\" width=60%}\n\n\n\nWhat does the csv in `read_csv()` stand for? Fill in the blank. \n\n- <input class='webex-solveme nospaces' size='10' data-answer='[\"comma\"]'/> separated values \n\n\nSuppose we attempt to import the csv file given above with the code below. What will be the result? \n\n```r\ndata <- read_csv(\"https://pos.it/r4ds-students-csv\",\n    col_types = list(AGE = col_double())\n)\n```\n\n\n\n<div class='webex-radiogroup' id='radio_SKDSWPBAHW'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SKDSWPBAHW\" value=\"\"></input> <span>imports with no errors or warnings</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SKDSWPBAHW\" value=\"\"></input> <span>fails to import, throws error</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SKDSWPBAHW\" value=\"answer\"></input> <span>imports, but with a warning that there are parsing issues</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SKDSWPBAHW\" value=\"\"></input> <span>imports, but changes the column name to `age`</span></label></div>\n\n\n\n\nSuppose we import the dataset given above and name it `data`. What will `is.na(data[3,3])` return? \n\n\n<div class='webex-radiogroup' id='radio_DEUBVVXZBY'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DEUBVVXZBY\" value=\"\"></input> <span>True</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DEUBVVXZBY\" value=\"answer\"></input> <span>False</span></label></div>\n\n\nSuppose we import the dataset given above and name it `data`. Which of the following would return the first column? \n\n\n<div class='webex-radiogroup' id='radio_YFVPGHRJGY'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_YFVPGHRJGY\" value=\"answer\"></input> <span>`data[1]`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_YFVPGHRJGY\" value=\"answer\"></input> <span>`data[[1]]`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_YFVPGHRJGY\" value=\"\"></input> <span>`data[[Student ID]]`</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_YFVPGHRJGY\" value=\"answer\"></input> <span>`` data$`Student ID` ``</span></label></div>\n\n\nTrue or false, assuming the same dataset the following code would rename the `Student ID` column to `student_id`? \n\n```r\ndata %>% rename(student_id = `Student ID`)\n```\n\n\n<div class='webex-radiogroup' id='radio_ETAXGDJOAC'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_ETAXGDJOAC\" value=\"answer\"></input> <span>True</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_ETAXGDJOAC\" value=\"\"></input> <span>False</span></label></div>\n\n\nTrue or false, we can use a `read_*()` function from `readr` to import a google sheet.\n\n\n<div class='webex-radiogroup' id='radio_AUBEQISZUU'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_AUBEQISZUU\" value=\"\"></input> <span>True</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_AUBEQISZUU\" value=\"answer\"></input> <span>False</span></label></div>\n\n\n\n## Data visualization\n\n\n\nWe will continue working with the `ratings` dataset from the visualization lecture (part of the `languageR` package). It contains the following variables: \n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 81\nColumns: 14\n$ Word             <fct> almond, ant, apple, apricot, asparagus, avocado, badg…\n$ Frequency        <dbl> 4.204693, 5.347108, 6.304449, 3.828641, 3.663562, 3.4…\n$ FamilySize       <dbl> 0.0000000, 1.3862944, 1.0986123, 0.0000000, 0.0000000…\n$ SynsetCount      <dbl> 1.0986123, 1.0986123, 1.0986123, 1.3862944, 1.0986123…\n$ Length           <int> 6, 3, 5, 7, 9, 7, 6, 6, 3, 6, 3, 8, 10, 9, 8, 5, 9, 5…\n$ Class            <fct> plant, animal, plant, plant, plant, plant, animal, pl…\n$ FreqSingular     <int> 24, 69, 315, 26, 19, 24, 53, 74, 155, 37, 118, 15, 26…\n$ FreqPlural       <int> 42, 140, 231, 19, 19, 6, 78, 77, 103, 14, 180, 19, 31…\n$ DerivEntropy     <dbl> 0.0000, 0.5620, 0.4960, 0.0000, 0.0000, 0.0000, 0.634…\n$ Complex          <fct> simplex, simplex, simplex, simplex, simplex, simplex,…\n$ rInfl            <dbl> -0.54232429, -0.70026465, 0.30900484, 0.30010459, 0.0…\n$ meanWeightRating <dbl> 1.4860, 3.3489, 2.1948, 1.3216, 1.4424, 1.3256, 3.047…\n$ meanSizeRating   <dbl> 1.8912, 3.6275, 2.4730, 1.7597, 1.8660, 1.7737, 3.369…\n$ meanFamiliarity  <dbl> 3.72, 3.60, 5.84, 4.40, 3.68, 4.12, 2.12, 5.68, 3.20,…\n```\n:::\n:::\n\n\nFill in the blanks below with one of the following words: `data`, `aesthetics`, `geom`. \n\n> The basic ggplot involves: (1) using your <input class='webex-solveme nospaces' size='10' data-answer='[\"data\"]'/>, (2) defining how variables are mapped to visual properties (<input class='webex-solveme nospaces' size='10' data-answer='[\"aesthetics\"]'/>), and (3) determining the geometrical object that a plot uses to represent data (<input class='webex-solveme nospaces' size='10' data-answer='[\"geom\"]'/>)\n\nWhen ggplot2 maps a categorical variable to an aesthetic, it automatically assigns a unique value of the aesthetic to each level of the variable. What is this process called?\n\n\n<div class='webex-radiogroup' id='radio_SULDDFFZTB'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SULDDFFZTB\" value=\"\"></input> <span>level assignment</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SULDDFFZTB\" value=\"\"></input> <span>variable aestheticization</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SULDDFFZTB\" value=\"\"></input> <span>autofill</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_SULDDFFZTB\" value=\"answer\"></input> <span>scaling</span></label></div>\n\n\nThe code below generated which of the following figures? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n    data = ratings,\n    mapping = aes(x = Frequency, y = meanFamiliarity)\n) + \n    geom_point(mapping = aes(color = Class)) +\n    geom_smooth(method = \"lm\") +\n    theme_classic(base_size=20)\n```\n:::\n\n\n![](/include/figures/global-v-local.png){#fig-globallocal fig-align=\"center\" width=100%}\n\n\n\n<div class='webex-radiogroup' id='radio_DVSCHANZXG'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DVSCHANZXG\" value=\"\"></input> <span>A</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DVSCHANZXG\" value=\"answer\"></input> <span>B</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DVSCHANZXG\" value=\"\"></input> <span>C</span></label></div>\n\n\nSuppose we want to map the variable `Complex` to the color aesthetic in a scatterplot. Which of the following arguments could we pass to `geom_point()`? \n\n\n<div class='webex-radiogroup' id='radio_GJBAPBQHJR'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_GJBAPBQHJR\" value=\"\"></input> <span>color = Complex</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_GJBAPBQHJR\" value=\"answer\"></input> <span>mapping=aes(color = Complex)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_GJBAPBQHJR\" value=\"\"></input> <span>color = mapping(Complex)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_GJBAPBQHJR\" value=\"answer\"></input> <span>aes(color=Complex)</span></label></div>\n\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom.png){#fig-guessgeom fig-align=\"center\" width=50%}\n\n\n<div class='webex-radiogroup' id='radio_DIERTVJHGK'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DIERTVJHGK\" value=\"\"></input> <span>geom_histogram()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DIERTVJHGK\" value=\"answer\"></input> <span>geom_density()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DIERTVJHGK\" value=\"\"></input> <span>geom_bar()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DIERTVJHGK\" value=\"\"></input> <span>geom_smooth()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DIERTVJHGK\" value=\"\"></input> <span>geom_point()</span></label></div>\n\n\n\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom2.png){#fig-guessgeom2 fig-align=\"center\" width=50%}\n\n\n<div class='webex-radiogroup' id='radio_LLKLYKVKZY'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_LLKLYKVKZY\" value=\"answer\"></input> <span>geom_histogram()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_LLKLYKVKZY\" value=\"\"></input> <span>geom_density()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_LLKLYKVKZY\" value=\"\"></input> <span>geom_bar()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_LLKLYKVKZY\" value=\"\"></input> <span>geom_smooth()</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_LLKLYKVKZY\" value=\"\"></input> <span>geom_point()</span></label></div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}