{
  "hash": "79f380728525ed2de26f6a302bd92371",
  "result": {
    "markdown": "---\ntitle:  \"Lab 2: Import and visualize data\"\nsubtitle: \"Not graded, just practice\"\ndate:   2023-09-07\nauthor: Katie Schuler\n---\n\n::: {.cell}\n\n:::\n\n\n\n## Tidyverse\n\nWhat is the relationship between tidyverse and readr? \n\n\n\n\n* (A) tidyverse is a package in the readr family of packages  \n* (B) readr is a package in the tidyverse family of packages  \n* (C) tidyverse and readr are two unrelated packages  \n* (D) tidyverse and reader are two names for the same package  \n\n\n\nIn the tidyverse, what does \"tidy data\" refer to? \n\n\n\n\n* (A) any data we load into the tidyverse  \n* (B) a dataset with no missing values  \n* (C) a standard way to organize a dataset  \n* (D) the process of cleaning a dataset  \n\n\n\nWhat is the purpose of the `purrr` package? \n\n\n\n\n* (A) Data visualization  \n* (B) Data wrangling  \n* (C) Data importing  \n* (D) Functional programming  \n* (E) All of the above  \n\n\n\nWhat is the primary purpose of the `readr` package? \n\n\n\n\n* (A) Data visualization  \n* (B) Data wrangling  \n* (C) Data importing  \n* (D) Functional programming  \n* (E) All of the above  \n\n\n\nWhich of the following returned this message? \n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.2     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n* (A) `library(tidyverse)`  \n* (B) `family(tidyverse)`  \n* (C) `library.collection(tidyverse)`  \n* (D) `library(tidyverse, report=TRUE)`  \n\n\n\n\n## purrr \n\nSuppose we have the following tibble, stored with the variable `df`. What will `map(df, mean)` return? \n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 3\n      x     y     z\n  <int> <int> <int>\n1     1     5     9\n2     2     6    10\n3     3     7    11\n4     4     8    12\n```\n:::\n:::\n\n\n* (A) the mean of each row  \n* (B) the mean of each column  \n* (C) the mean of all values  \n* (D) Error: cannot compute mean of type integer  \n\n\n\n\nSuppose we wanted to coerce each column in the previous tibble to the data type `double` with one line of code. Fill in the two arguments to `map` that would accomplish this: \n\n- map(__________, __________)\n\n\n\n## Tibbles\n\nSuppose we run the following code block. What will `is.data.frame(tib)` return? \n\n```r\ntib <- tibble(x = 1:2, y = c(\"a\", \"b\"))\n```\n\n\n\n\n* (A) True  \n* (B) False  \n\n\n\nWhat will `typeof(tib)` return? \n\n\n\n\n* (A) double  \n* (B) character  \n* (C) &apos;double&apos; â€¢ &apos;character&apos;  \n* (D) list  \n* (E) tibble  \n* (F) data.frame  \n\n\n\nWhich of the following would convert a dataframe, `df`, to a tibble?  \n\n\n\n\n\n* (A) `as_tibble(df)`  \n* (B) `as.data.frame(df, tibble)`  \n* (C) `tribble(df)`  \n* (D) `df %>% as_tibble()`  \n* (E) `df |> as_tibble()`  \n\n\n\nSuppose we run the following code, what will `is_tibble()` return? \n\n```r\nx <- tribble(\n    ~x, ~y, \n    2, 3, \n    4, 5\n)\n```\n\n\n\n\n* (A) True  \n* (B) False  \n\n\n\n\n\nSuppose we create the following tibble, `tib`, what will `tib$a` return?\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 3\n    age name   alt_name\n  <dbl> <chr>  <chr>   \n1     1 dory   dolores \n2     2 hazel  <NA>    \n3     3 graham <NA>    \n4     5 joan   joanie  \n```\n:::\n:::\n\n\n* (A) a warning and the value NULL  \n* (B) `age` via partial matching  \n* (C) `age` and `alt_name` via partial matching  \n* (D) `hazel`, `graham`, `joan`, and `joanie` via partial matching  \n* (E) an empty vector  \n\n\n\n\n## readr \n\nMany questions below refer to this dataset, borrowed from R4DS and available at the url [https://pos.it/r4ds-students-csv](https://pos.it/r4ds-students-csv). \n\n![borrowed from R for Data Science](/include/figures/rectangle-data.png){#fig-rectangledata fig-align=\"center\" width=60%}\n\n\n\nWhat does the csv in `read_csv()` stand for? Fill in the blank. \n\n- __________ separated values \n\n\nSuppose we attempt to import the csv file given above with the code below. What will be the result? \n\n```r\ndata <- read_csv(\"https://pos.it/r4ds-students-csv\",\n    col_types = list(AGE = col_double())\n)\n```\n\n\n\n\n\n* (A) imports with no errors or warnings  \n* (B) fails to import, throws error  \n* (C) imports, but with a warning that there are parsing issues  \n* (D) imports, but changes the column name to `age`  \n\n\n\n\n\nSuppose we import the dataset given above and name it `data`. What will `is.na(data[3,3])` return? \n\n\n\n\n* (A) True  \n* (B) False  \n\n\n\nSuppose we import the dataset given above and name it `data`. Which of the following would return the first column? \n\n\n\n\n* (A) `data[1]`  \n* (B) `data[[1]]`  \n* (C) `data[[Student ID]]`  \n* (D) `` data$`Student ID` ``  \n\n\n\nTrue or false, assuming the same dataset the following code would rename the `Student ID` column to `student_id`? \n\n```r\ndata %>% rename(student_id = `Student ID`)\n```\n\n\n\n\n* (A) True  \n* (B) False  \n\n\n\nTrue or false, we can use a `read_*()` function from `readr` to import a google sheet.\n\n\n\n\n* (A) True  \n* (B) False  \n\n\n\n\n## Data visualization\n\n\n\nWe will continue working with the `ratings` dataset from the visualization lecture (part of the `languageR` package). It contains the following variables: \n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 81\nColumns: 14\n$ Word             <fct> almond, ant, apple, apricot, asparagus, avocado, badg~\n$ Frequency        <dbl> 4.204693, 5.347108, 6.304449, 3.828641, 3.663562, 3.4~\n$ FamilySize       <dbl> 0.0000000, 1.3862944, 1.0986123, 0.0000000, 0.0000000~\n$ SynsetCount      <dbl> 1.0986123, 1.0986123, 1.0986123, 1.3862944, 1.0986123~\n$ Length           <int> 6, 3, 5, 7, 9, 7, 6, 6, 3, 6, 3, 8, 10, 9, 8, 5, 9, 5~\n$ Class            <fct> plant, animal, plant, plant, plant, plant, animal, pl~\n$ FreqSingular     <int> 24, 69, 315, 26, 19, 24, 53, 74, 155, 37, 118, 15, 26~\n$ FreqPlural       <int> 42, 140, 231, 19, 19, 6, 78, 77, 103, 14, 180, 19, 31~\n$ DerivEntropy     <dbl> 0.0000, 0.5620, 0.4960, 0.0000, 0.0000, 0.0000, 0.634~\n$ Complex          <fct> simplex, simplex, simplex, simplex, simplex, simplex,~\n$ rInfl            <dbl> -0.54232429, -0.70026465, 0.30900484, 0.30010459, 0.0~\n$ meanWeightRating <dbl> 1.4860, 3.3489, 2.1948, 1.3216, 1.4424, 1.3256, 3.047~\n$ meanSizeRating   <dbl> 1.8912, 3.6275, 2.4730, 1.7597, 1.8660, 1.7737, 3.369~\n$ meanFamiliarity  <dbl> 3.72, 3.60, 5.84, 4.40, 3.68, 4.12, 2.12, 5.68, 3.20,~\n```\n:::\n:::\n\n\n\nFill in the blanks below with one of the following words: `data`, `aesthetics`, `geom`. \n\n> The basic ggplot involves: (1) using your __________, (2) defining how variables are mapped to visual properties (__________), and (3) determining the geometrical object that a plot uses to represent data (__________)\n\nWhen ggplot2 maps a categorical variable to an aesthetic, it automatically assigns a unique value of the aesthetic to each level of the variable. What is this process called?\n\n\n\n\n* (A) level assignment  \n* (B) variable aestheticization  \n* (C) autofill  \n* (D) scaling  \n\n\n\nThe code below generated which of the following figures? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n    data = ratings,\n    mapping = aes(x = Frequency, y = meanFamiliarity)\n) + \n    geom_point(mapping = aes(color = Class)) +\n    geom_smooth(method = \"lm\") +\n    theme_classic(base_size=20)\n```\n:::\n\n\n\n![](/include/figures/global-v-local.png){#fig-globallocal fig-align=\"center\" width=100%}\n\n\n\n\n\n* (A) A  \n* (B) B  \n* (C) C  \n\n\n\nSuppose we want to map the variable `Complex` to the color aesthetic in a scatterplot. Which of the following arguments could we pass to `geom_point()`? \n\n\n\n\n* (A) color = Complex  \n* (B) mapping=aes(color = Complex)  \n* (C) color = mapping(Complex)  \n* (D) aes(color=Complex)  \n\n\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom.png){#fig-guessgeom fig-align=\"center\" width=50%}\n\n\n\n\n* (A) geom_histogram()  \n* (B) geom_density()  \n* (C) geom_bar()  \n* (D) geom_smooth()  \n* (E) geom_point()  \n\n\n\n\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom2.png){#fig-guessgeom2 fig-align=\"center\" width=50%}\n\n\n\n\n* (A) geom_histogram()  \n* (B) geom_density()  \n* (C) geom_bar()  \n* (D) geom_smooth()  \n* (E) geom_point()  \n\n\n\n::: {.callout-warning title=\"Under Construction\"}\nWe will add more practice questions soon!\n:::\n",
    "supporting": [
      "lab-02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}