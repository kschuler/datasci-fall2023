{"title":"Lab 2: Import and visualize data","markdown":{"yaml":{"title":"Lab 2: Import and visualize data","subtitle":"Not graded, just practice","date":"2023-09-07","author":"Katie Schuler"},"headingText":"Tidyverse","containsRefs":false,"markdown":"\n\n\n```{r}\n#| echo: false\n\nlibrary(webexercises)\n```\n\n\nWhat is the relationship between tidyverse and readr? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"tidyverse is a package in the readr family of packages\", \n    answer =\"readr is a package in the tidyverse family of packages\",\n    \"tidyverse and readr are two unrelated packages\",\n    \"tidyverse and reader are two names for the same package\"\n)\n\ncat(longmcq(choices))\n```\n\nIn the tidyverse, what does \"tidy data\" refer to? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"any data we load into the tidyverse\",\n    \"a dataset with no missing values\",\n    answer=\"a standard way to organize a dataset\",\n    \"the process of cleaning a dataset\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat is the purpose of the `purrr` package? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"Data visualization\",\n    \"Data wrangling\",\n    \"Data importing\",\n    answer=\"Functional programming\",\n    \"All of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat is the primary purpose of the `readr` package? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"Data visualization\",\n    \"Data wrangling\",\n    answer=\"Data importing\",\n    \"Functional programming\",\n    \"All of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhich of the following returned this message? \n\n```{r}\n#| echo: false\n\nlibrary(tidyverse)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"`library(tidyverse)`\",\n    \"`family(tidyverse)`\",\n    \"`library.collection(tidyverse)`\",\n    \"`library(tidyverse, report=TRUE)`\"\n)\n\ncat(longmcq(choices))\n```\n\n\n## purrr \n\nSuppose we have the following tibble, stored with the variable `df`. What will `map(df, mean)` return? \n\n```{r}\n#| echo: false\n\ndf <- tibble(\n    x = 1:4,\n    y = 5:8,\n    z = 9:12\n)\nprint(df)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"the mean of each row\",\n    answer=\"the mean of each column\",\n    \"the mean of all values\",\n    \"Error: cannot compute mean of type integer\"\n)\n\ncat(longmcq(choices))\n```\n\n\nSuppose we wanted to coerce each column in the previous tibble to the data type `double` with one line of code. Fill in the two arguments to `map` that would accomplish this: \n\n- map(`r fitb(\"df\", width = 10)`, `r fitb(\"as.double\", width = 10)`)\n\n\n\n## Tibbles\n\nSuppose we run the following code block. What will `is.data.frame(tib)` return? \n\n```r\ntib <- tibble(x = 1:2, y = c(\"a\", \"b\"))\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer =\"True\",\"False\")\n\ncat(longmcq(choices))\n```\n\nWhat will `typeof(tib)` return? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"double\", \n    \"character\",\n    \"'double' â€¢ 'character'\",\n    answer =\"list\",\n    \"tibble\",\n    \"data.frame\"\n)\n\ncat(longmcq(choices))\n```\n\nWhich of the following would convert a dataframe, `df`, to a tibble?  \n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`as_tibble(df)`\", \n    \"`as.data.frame(df, tibble)`\",\n    \"`tribble(df)`\",\n    answer =\"`df %>% as_tibble()`\",\n    answer = \"`df |> as_tibble()`\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we run the following code, what will `is_tibble()` return? \n\n```r\nx <- tribble(\n    ~x, ~y, \n    2, 3, \n    4, 5\n)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"True\",\n    \"False\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nSuppose we create the following tibble, `tib`, what will `tib$a` return?\n\n```{r}\n#| echo: false\n(tib <- tibble(\n    age = c(1, 2, 3, 5),\n    name = c(\"dory\", \"hazel\", \"graham\", \"joan\"),\n    alt_name = c(\"dolores\", NA, NA, \"joanie\")\n))\n```\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"a warning and the value NULL\", \n    \"`age` via partial matching\",\n    \"`age` and `alt_name` via partial matching\",\n    \"`hazel`, `graham`, `joan`, and `joanie` via partial matching\",\n    \"an empty vector\"\n)\n\ncat(longmcq(choices))\n```\n\n\n## readr \n\nMany questions below refer to this dataset, borrowed from R4DS and available at the url [https://pos.it/r4ds-students-csv](https://pos.it/r4ds-students-csv). \n\n![borrowed from R for Data Science](/include/figures/rectangle-data.png){#fig-rectangledata fig-align=\"center\" width=60%}\n\n\n\nWhat does the csv in `read_csv()` stand for? Fill in the blank. \n\n- `r fitb(\"comma\", width = 10)` separated values \n\n\nSuppose we attempt to import the csv file given above with the code below. What will be the result? \n\n```r\ndata <- read_csv(\"https://pos.it/r4ds-students-csv\",\n    col_types = list(AGE = col_double())\n)\n```\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"imports with no errors or warnings\",\n    \"fails to import, throws error\", \n    answer=\"imports, but with a warning that there are parsing issues\",\n    \"imports, but changes the column name to `age`\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nSuppose we import the dataset given above and name it `data`. What will `is.na(data[3,3])` return? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"True\",\n    answer=\"False\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we import the dataset given above and name it `data`. Which of the following would return the first column? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"`data[1]`\",\n    answer=\"`data[[1]]`\",\n    \"`data[[Student ID]]`\",\n    answer=\"`` data$`Student ID` ``\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, assuming the same dataset the following code would rename the `Student ID` column to `student_id`? \n\n```r\ndata %>% rename(student_id = `Student ID`)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"True\",\n    \"False\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, we can use a `read_*()` function from `readr` to import a google sheet.\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"True\",\n    answer=\"False\"\n)\n\ncat(longmcq(choices))\n```\n\n\n## Data visualization\n\n\n\nWe will continue working with the `ratings` dataset from the visualization lecture (part of the `languageR` package). It contains the following variables: \n\n```{r}\n#| echo: false\nlibrary(languageR)\n```\n\n```{r}\n#| echo: false\nglimpse(ratings)\n```\n\nFill in the blanks below with one of the following words: `data`, `aesthetics`, `geom`. \n\n> The basic ggplot involves: (1) using your `r fitb(\"data\", width = 10)`, (2) defining how variables are mapped to visual properties (`r fitb(\"aesthetics\", width = 10)`), and (3) determining the geometrical object that a plot uses to represent data (`r fitb(\"geom\", width = 10)`)\n\nWhen ggplot2 maps a categorical variable to an aesthetic, it automatically assigns a unique value of the aesthetic to each level of the variable. What is this process called?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"level assignment\",\n    \"variable aestheticization\",\n    \"autofill\",\n    answer=\"scaling\"\n)\n\ncat(longmcq(choices))\n```\n\nThe code below generated which of the following figures? \n\n```{r}\n#| eval: false\n\nggplot(\n    data = ratings,\n    mapping = aes(x = Frequency, y = meanFamiliarity)\n) + \n    geom_point(mapping = aes(color = Class)) +\n    geom_smooth(method = \"lm\") +\n    theme_classic(base_size=20)\n```\n\n![](/include/figures/global-v-local.png){#fig-globallocal fig-align=\"center\" width=100%}\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"A\",\n    answer=\"B\",\n    \"C\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we want to map the variable `Complex` to the color aesthetic in a scatterplot. Which of the following arguments could we pass to `geom_point()`? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"color = Complex\",\n    answer=\"mapping=aes(color = Complex)\",\n    \"color = mapping(Complex)\",\n    answer=\"aes(color=Complex)\"\n)\n\ncat(longmcq(choices))\n```\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom.png){#fig-guessgeom fig-align=\"center\" width=50%}\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"geom_histogram()\",\n    answer=\"geom_density()\",\n    \"geom_bar()\",\n    \"geom_smooth()\",\n    \"geom_point()\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom2.png){#fig-guessgeom2 fig-align=\"center\" width=50%}\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"geom_histogram()\",\n    \"geom_density()\",\n    \"geom_bar()\",\n    \"geom_smooth()\",\n    \"geom_point()\"\n)\n\ncat(longmcq(choices))\n```\n\n\n","srcMarkdownNoYaml":"\n\n\n```{r}\n#| echo: false\n\nlibrary(webexercises)\n```\n\n## Tidyverse\n\nWhat is the relationship between tidyverse and readr? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"tidyverse is a package in the readr family of packages\", \n    answer =\"readr is a package in the tidyverse family of packages\",\n    \"tidyverse and readr are two unrelated packages\",\n    \"tidyverse and reader are two names for the same package\"\n)\n\ncat(longmcq(choices))\n```\n\nIn the tidyverse, what does \"tidy data\" refer to? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"any data we load into the tidyverse\",\n    \"a dataset with no missing values\",\n    answer=\"a standard way to organize a dataset\",\n    \"the process of cleaning a dataset\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat is the purpose of the `purrr` package? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"Data visualization\",\n    \"Data wrangling\",\n    \"Data importing\",\n    answer=\"Functional programming\",\n    \"All of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat is the primary purpose of the `readr` package? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"Data visualization\",\n    \"Data wrangling\",\n    answer=\"Data importing\",\n    \"Functional programming\",\n    \"All of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhich of the following returned this message? \n\n```{r}\n#| echo: false\n\nlibrary(tidyverse)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"`library(tidyverse)`\",\n    \"`family(tidyverse)`\",\n    \"`library.collection(tidyverse)`\",\n    \"`library(tidyverse, report=TRUE)`\"\n)\n\ncat(longmcq(choices))\n```\n\n\n## purrr \n\nSuppose we have the following tibble, stored with the variable `df`. What will `map(df, mean)` return? \n\n```{r}\n#| echo: false\n\ndf <- tibble(\n    x = 1:4,\n    y = 5:8,\n    z = 9:12\n)\nprint(df)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"the mean of each row\",\n    answer=\"the mean of each column\",\n    \"the mean of all values\",\n    \"Error: cannot compute mean of type integer\"\n)\n\ncat(longmcq(choices))\n```\n\n\nSuppose we wanted to coerce each column in the previous tibble to the data type `double` with one line of code. Fill in the two arguments to `map` that would accomplish this: \n\n- map(`r fitb(\"df\", width = 10)`, `r fitb(\"as.double\", width = 10)`)\n\n\n\n## Tibbles\n\nSuppose we run the following code block. What will `is.data.frame(tib)` return? \n\n```r\ntib <- tibble(x = 1:2, y = c(\"a\", \"b\"))\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer =\"True\",\"False\")\n\ncat(longmcq(choices))\n```\n\nWhat will `typeof(tib)` return? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"double\", \n    \"character\",\n    \"'double' â€¢ 'character'\",\n    answer =\"list\",\n    \"tibble\",\n    \"data.frame\"\n)\n\ncat(longmcq(choices))\n```\n\nWhich of the following would convert a dataframe, `df`, to a tibble?  \n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`as_tibble(df)`\", \n    \"`as.data.frame(df, tibble)`\",\n    \"`tribble(df)`\",\n    answer =\"`df %>% as_tibble()`\",\n    answer = \"`df |> as_tibble()`\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we run the following code, what will `is_tibble()` return? \n\n```r\nx <- tribble(\n    ~x, ~y, \n    2, 3, \n    4, 5\n)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"True\",\n    \"False\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nSuppose we create the following tibble, `tib`, what will `tib$a` return?\n\n```{r}\n#| echo: false\n(tib <- tibble(\n    age = c(1, 2, 3, 5),\n    name = c(\"dory\", \"hazel\", \"graham\", \"joan\"),\n    alt_name = c(\"dolores\", NA, NA, \"joanie\")\n))\n```\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"a warning and the value NULL\", \n    \"`age` via partial matching\",\n    \"`age` and `alt_name` via partial matching\",\n    \"`hazel`, `graham`, `joan`, and `joanie` via partial matching\",\n    \"an empty vector\"\n)\n\ncat(longmcq(choices))\n```\n\n\n## readr \n\nMany questions below refer to this dataset, borrowed from R4DS and available at the url [https://pos.it/r4ds-students-csv](https://pos.it/r4ds-students-csv). \n\n![borrowed from R for Data Science](/include/figures/rectangle-data.png){#fig-rectangledata fig-align=\"center\" width=60%}\n\n\n\nWhat does the csv in `read_csv()` stand for? Fill in the blank. \n\n- `r fitb(\"comma\", width = 10)` separated values \n\n\nSuppose we attempt to import the csv file given above with the code below. What will be the result? \n\n```r\ndata <- read_csv(\"https://pos.it/r4ds-students-csv\",\n    col_types = list(AGE = col_double())\n)\n```\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"imports with no errors or warnings\",\n    \"fails to import, throws error\", \n    answer=\"imports, but with a warning that there are parsing issues\",\n    \"imports, but changes the column name to `age`\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nSuppose we import the dataset given above and name it `data`. What will `is.na(data[3,3])` return? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"True\",\n    answer=\"False\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we import the dataset given above and name it `data`. Which of the following would return the first column? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"`data[1]`\",\n    answer=\"`data[[1]]`\",\n    \"`data[[Student ID]]`\",\n    answer=\"`` data$`Student ID` ``\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, assuming the same dataset the following code would rename the `Student ID` column to `student_id`? \n\n```r\ndata %>% rename(student_id = `Student ID`)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"True\",\n    \"False\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, we can use a `read_*()` function from `readr` to import a google sheet.\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"True\",\n    answer=\"False\"\n)\n\ncat(longmcq(choices))\n```\n\n\n## Data visualization\n\n\n\nWe will continue working with the `ratings` dataset from the visualization lecture (part of the `languageR` package). It contains the following variables: \n\n```{r}\n#| echo: false\nlibrary(languageR)\n```\n\n```{r}\n#| echo: false\nglimpse(ratings)\n```\n\nFill in the blanks below with one of the following words: `data`, `aesthetics`, `geom`. \n\n> The basic ggplot involves: (1) using your `r fitb(\"data\", width = 10)`, (2) defining how variables are mapped to visual properties (`r fitb(\"aesthetics\", width = 10)`), and (3) determining the geometrical object that a plot uses to represent data (`r fitb(\"geom\", width = 10)`)\n\nWhen ggplot2 maps a categorical variable to an aesthetic, it automatically assigns a unique value of the aesthetic to each level of the variable. What is this process called?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"level assignment\",\n    \"variable aestheticization\",\n    \"autofill\",\n    answer=\"scaling\"\n)\n\ncat(longmcq(choices))\n```\n\nThe code below generated which of the following figures? \n\n```{r}\n#| eval: false\n\nggplot(\n    data = ratings,\n    mapping = aes(x = Frequency, y = meanFamiliarity)\n) + \n    geom_point(mapping = aes(color = Class)) +\n    geom_smooth(method = \"lm\") +\n    theme_classic(base_size=20)\n```\n\n![](/include/figures/global-v-local.png){#fig-globallocal fig-align=\"center\" width=100%}\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"A\",\n    answer=\"B\",\n    \"C\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we want to map the variable `Complex` to the color aesthetic in a scatterplot. Which of the following arguments could we pass to `geom_point()`? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"color = Complex\",\n    answer=\"mapping=aes(color = Complex)\",\n    \"color = mapping(Complex)\",\n    answer=\"aes(color=Complex)\"\n)\n\ncat(longmcq(choices))\n```\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom.png){#fig-guessgeom fig-align=\"center\" width=50%}\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"geom_histogram()\",\n    answer=\"geom_density()\",\n    \"geom_bar()\",\n    \"geom_smooth()\",\n    \"geom_point()\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nWhich geoms are depicted in the following figure? \n\n![](/include/figures/guess-geom2.png){#fig-guessgeom2 fig-align=\"center\" width=50%}\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"geom_histogram()\",\n    \"geom_density()\",\n    \"geom_bar()\",\n    \"geom_smooth()\",\n    \"geom_point()\"\n)\n\ncat(longmcq(choices))\n```\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css","../include/webex.css"],"toc":true,"number-sections":true,"include-in-header":["../include/webex.js"],"output-file":"lab-02.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","callout-appearance":"simple","theme":"cosmo","fontsize":"1em","linestretch":1.35,"number-depth":2,"grid":{"sidebar-width":"300px"},"title":"Lab 2: Import and visualize data","subtitle":"Not graded, just practice","date":"2023-09-07","author":"Katie Schuler"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}