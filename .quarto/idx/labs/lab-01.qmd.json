{"title":"Lab 1: Getting started with R","markdown":{"yaml":{"title":"Lab 1: Getting started with R","subtitle":"Not graded, just practice"},"headingText":"Google Colab","containsRefs":false,"markdown":"\n\nTo learn to program in R (or any language), you can read about how to do it, and watch someone else do it; but the only way to really learn is to do it yourself. Create some data structures, try some stuff, and see what happens! Here are some practice quiz questions to guide your learning. We will go over the solutions to these in lab.\n\n```{r}\n#| echo: false\n\nlibrary(webexercises)\n```\n\n\nTrue or false? We start a new R notebook in Google Colab with `File > New notebook`\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"True\",answer = \"False\")\n\ncat(longmcq(choices))\n```\n\nFor problem sets, how will you submit your colab notebook for grading? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`File > Download > Download .ipynb`, then upload to Gradescope\",\n    \"`File > Download > Download .ipynb`, then upload to Canvas\",\n    \"`File > Download > Download .py`, then upload to Gradescope\",\n    \"`File > Download > Download .py`, then upload to Canvas\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhat version of R is Google Colab running? Hint: use `sessionInfo()`.\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(\"4.3.1\"), ignore_ws = TRUE, width = \"20\"))\n\n```\n\nWhat is the relationship between R and Google Colab?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"R is a programming language. Google Colab is a smaller, specific version of R.\",\n    answer=\"R is a programming language. Google Colab is a development environment where you can run R\",\n    \"R and Google Colab are both programming languages.\",\n    \"R is a paid (proprietary) programming language. Google Colab is a free service to run R.\"\n)\n\ncat(longmcq(choices))\n\n```\n\n## R Basics\n\n\nWhich of the following are expressions? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"10\",\n    answer = \"5 + 10\",\n    answer =\"x <- 5 + 10\",\n    answer = \"x <- y + 10\",\n    answer = \"mean(x)\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhich of the following are valid variable names in R? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"childAge\",\n    answer = \"response_time\",\n    \"1stPlaceWinner\",\n    \"2fast2furious\",\n    \"pi\"\n)\n\ncat(longmcq(choices))\n\n```\n\n\nSuppose we open a new colab notebook and run the following code block. What will be returned?\n\n```r\nx <- 1 + 2\ny <- 0 + 3\nls()\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"3\",\n    \"x=3 • y=3\",\n    answer =\"'x' • 'y' \",\n    \"mean(c(1,3,5)) • median(c(1,3,5))\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhich of the following will load the `emo` package into the current environment? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"install.packages('emo')\",\n    answer =\"library(emo)\",\n    \"data(emo)\",\n    \"attributes(emo)\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhich of the following occur in the code block below? \n\n```r\n# compute the mean of x and y\nmean(c(x,y))\n```\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"a message\",\n    answer =\"a function\",\n    answer =\"a comment\",\n    answer = \"an expression\"\n)\n\ncat(longmcq(choices))\n```\n\n## Vectors\n\nSuppose we construct a vector with `c(1, \"two\", 3, 4, 5, 6)` and assign it to `x`. What will the following code block return? \n\n```r\ntypeof(x)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(\"character\"), ignore_ws = TRUE, width = \"20\"))\n\n```\n\nWhat is the previous question an example of? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"attribute addition\",\n    \"explicit coercion\",\n    answer = \"implicit coercion\",\n    \"none of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat will the following code block return? \n\n```r\nx <- 1:4\ny <- matrix(x, ncol=2, nrow=2)\ntypeof(y)\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(\"integer\"), ignore_ws = TRUE, width = \"20\"))\n\n```\n\n\nWhat will the following code block return? \n\n```r\nx <- c()\nlength(x)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(0), ignore_ws = TRUE, width = \"20\"))\n\n```\n\n\nGiven the following output from `str(x)`, what will `as.logical(x)` return? \n\n```{r}\n#| echo: false\nx <- c(1, 0, 1, 0)\nstr(x)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"an error\",\n    answer=\"TRUE • FALSE • TRUE • FALSE\",\n    'FALSE',\n    \"FALSE • TRUE • FALSE • TRUE\"\n)\n\ncat(longmcq(choices))\n```\n\nGiven the following vector, what will `as.double(x)` return? \n\n```r\nx <- c(\"one\", \"two\", \"three\")\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"an error\",\n    \"1 • 2 • 3\",\n    '2 • 4 • 6',\n    \"'one' • 'two' • 'three'\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nWhat happens if you add a vector of numbers to a single number in the following expression?\n\n```r\nc(1, 3, 5) + 1\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"2 • 3 • 5\",\n    \"Error: length mismatch\",\n    \"1 • 3 • 5 • 1\",\n    answer = \"2 • 4 • 6\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat happens if you multiply a vector times another vector? \n\n```r\nc(1, 3, 5) * c(10, 100, 1000)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"10 • 300 • 5000\",\n    \"Error: length mismatch\",\n    \"10 • 30 • 50 • 100 • 300 • 500 • 1000 • 3000 • 5000\",\n    \"a 2 x 3 matrix\",\n    \"Error: cannot multiply vectors\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we run the following code.  What will `any(x)` return? \n\n```r\nx <- c(1, 5, 11) > 10\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"TRUE\",\n    \"FALSE\",\n    \"Error: vector is double but requires logical\"\n)\n\ncat(longmcq(choices))\n```\n\n## Subsetting\n\nWhich of the following code subsets the vector `x <- c(\"blue\", \"pink\", \"red\")` to return just the first element?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"x[1]\",\n    answer = \"x[[1]]\",\n    \"x[0]\",\n    answer = \"x[-c(2, 3)]\",\n    'x[\"blue\"]'\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we run the following code. What will `x[[2]]` return?\n\n```r\nx <- seq(from = 2, to =8, by=2)\n```\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(4), ignore_ws = TRUE, width = \"20\"))\n\n```\n\n\nSuppose we run the following code. What will `m[1, 2]` return?\n\n```r\nm <- matrix(c(10,20,30,40), nrow=2, ncol=2)\n```\n\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(30), ignore_ws = TRUE, width = \"20\"))\n\n```\n<!---\n \nTHERE ARE FROM BEFORE webexerciser\n\nSuppose we run the following code block. What will `typeof(x)` return? What about `length(x)`? Explain why.\n\n    ```r\n    x <- data.frame(x=c(1,2,3), y=c(\"a\",\"b\",\"c\"))\n    length(x)\n    ```\n\n1. Suppose we run the following code. What will `y` return? What about `typeof(y)`?\n\n    ```r\n    x <- c(2,4,6)\n    y <- x * 2   \n    ```\n\n## Coercion\n\nWhat will the following code block return? \n\n```r\nx <- c(1, 'two', 3, 4, 5, 6)\ntypeof(x)\n```\n\n\n## Subsetting\n\n\n1. Suppose `m` is a matrix created with `matrix(c(1,2,3,4), nrow=2, ncol=2)`. What will each of the following operations return?\n    - `m[c(1), ]`\n    - `m[c(2), c(1, 2)]`\n    - `m[]`\n    - `m[[2]]`\n\n1. Suppose `df` is a data frame created with `data.frame(x=c(1,2,3), y=c(\"a\",\"b\",\"c\"))`. What will each of the following operations return?\n    - `df[c(1,2)]`\n    - `df[c(1,2), c(2)]`\n    - `df[['x']]`\n    - `df[x]`\n    - `df[[2]]`\n\n1. Suppose `df` is a dataframe with column names `ageChild`, `ageParent`, and `dateAdded`. What will `df$age` return?  Explain why.\n\nSuppose we create a vector including every letter in the alphabet and assign it to `x`. What will the following code return? \n\n```r\ny <- as.logical(x)\ny[[1]]\n```\nNA or <NA> \n\n## Programming in R\n1. Explain in one sentence the difference between a `for` loop and a `while` loop?  \n--->\n","srcMarkdownNoYaml":"\n\nTo learn to program in R (or any language), you can read about how to do it, and watch someone else do it; but the only way to really learn is to do it yourself. Create some data structures, try some stuff, and see what happens! Here are some practice quiz questions to guide your learning. We will go over the solutions to these in lab.\n\n```{r}\n#| echo: false\n\nlibrary(webexercises)\n```\n\n## Google Colab\n\nTrue or false? We start a new R notebook in Google Colab with `File > New notebook`\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"True\",answer = \"False\")\n\ncat(longmcq(choices))\n```\n\nFor problem sets, how will you submit your colab notebook for grading? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`File > Download > Download .ipynb`, then upload to Gradescope\",\n    \"`File > Download > Download .ipynb`, then upload to Canvas\",\n    \"`File > Download > Download .py`, then upload to Gradescope\",\n    \"`File > Download > Download .py`, then upload to Canvas\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhat version of R is Google Colab running? Hint: use `sessionInfo()`.\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(\"4.3.1\"), ignore_ws = TRUE, width = \"20\"))\n\n```\n\nWhat is the relationship between R and Google Colab?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"R is a programming language. Google Colab is a smaller, specific version of R.\",\n    answer=\"R is a programming language. Google Colab is a development environment where you can run R\",\n    \"R and Google Colab are both programming languages.\",\n    \"R is a paid (proprietary) programming language. Google Colab is a free service to run R.\"\n)\n\ncat(longmcq(choices))\n\n```\n\n## R Basics\n\n\nWhich of the following are expressions? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"10\",\n    answer = \"5 + 10\",\n    answer =\"x <- 5 + 10\",\n    answer = \"x <- y + 10\",\n    answer = \"mean(x)\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhich of the following are valid variable names in R? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"childAge\",\n    answer = \"response_time\",\n    \"1stPlaceWinner\",\n    \"2fast2furious\",\n    \"pi\"\n)\n\ncat(longmcq(choices))\n\n```\n\n\nSuppose we open a new colab notebook and run the following code block. What will be returned?\n\n```r\nx <- 1 + 2\ny <- 0 + 3\nls()\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"3\",\n    \"x=3 • y=3\",\n    answer =\"'x' • 'y' \",\n    \"mean(c(1,3,5)) • median(c(1,3,5))\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhich of the following will load the `emo` package into the current environment? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"install.packages('emo')\",\n    answer =\"library(emo)\",\n    \"data(emo)\",\n    \"attributes(emo)\"\n)\n\ncat(longmcq(choices))\n\n```\n\nWhich of the following occur in the code block below? \n\n```r\n# compute the mean of x and y\nmean(c(x,y))\n```\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"a message\",\n    answer =\"a function\",\n    answer =\"a comment\",\n    answer = \"an expression\"\n)\n\ncat(longmcq(choices))\n```\n\n## Vectors\n\nSuppose we construct a vector with `c(1, \"two\", 3, 4, 5, 6)` and assign it to `x`. What will the following code block return? \n\n```r\ntypeof(x)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(\"character\"), ignore_ws = TRUE, width = \"20\"))\n\n```\n\nWhat is the previous question an example of? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"attribute addition\",\n    \"explicit coercion\",\n    answer = \"implicit coercion\",\n    \"none of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat will the following code block return? \n\n```r\nx <- 1:4\ny <- matrix(x, ncol=2, nrow=2)\ntypeof(y)\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(\"integer\"), ignore_ws = TRUE, width = \"20\"))\n\n```\n\n\nWhat will the following code block return? \n\n```r\nx <- c()\nlength(x)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(0), ignore_ws = TRUE, width = \"20\"))\n\n```\n\n\nGiven the following output from `str(x)`, what will `as.logical(x)` return? \n\n```{r}\n#| echo: false\nx <- c(1, 0, 1, 0)\nstr(x)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"an error\",\n    answer=\"TRUE • FALSE • TRUE • FALSE\",\n    'FALSE',\n    \"FALSE • TRUE • FALSE • TRUE\"\n)\n\ncat(longmcq(choices))\n```\n\nGiven the following vector, what will `as.double(x)` return? \n\n```r\nx <- c(\"one\", \"two\", \"three\")\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"an error\",\n    \"1 • 2 • 3\",\n    '2 • 4 • 6',\n    \"'one' • 'two' • 'three'\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\nWhat happens if you add a vector of numbers to a single number in the following expression?\n\n```r\nc(1, 3, 5) + 1\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"2 • 3 • 5\",\n    \"Error: length mismatch\",\n    \"1 • 3 • 5 • 1\",\n    answer = \"2 • 4 • 6\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat happens if you multiply a vector times another vector? \n\n```r\nc(1, 3, 5) * c(10, 100, 1000)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"10 • 300 • 5000\",\n    \"Error: length mismatch\",\n    \"10 • 30 • 50 • 100 • 300 • 500 • 1000 • 3000 • 5000\",\n    \"a 2 x 3 matrix\",\n    \"Error: cannot multiply vectors\"\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we run the following code.  What will `any(x)` return? \n\n```r\nx <- c(1, 5, 11) > 10\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"TRUE\",\n    \"FALSE\",\n    \"Error: vector is double but requires logical\"\n)\n\ncat(longmcq(choices))\n```\n\n## Subsetting\n\nWhich of the following code subsets the vector `x <- c(\"blue\", \"pink\", \"red\")` to return just the first element?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"x[1]\",\n    answer = \"x[[1]]\",\n    \"x[0]\",\n    answer = \"x[-c(2, 3)]\",\n    'x[\"blue\"]'\n)\n\ncat(longmcq(choices))\n```\n\nSuppose we run the following code. What will `x[[2]]` return?\n\n```r\nx <- seq(from = 2, to =8, by=2)\n```\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(4), ignore_ws = TRUE, width = \"20\"))\n\n```\n\n\nSuppose we run the following code. What will `m[1, 2]` return?\n\n```r\nm <- matrix(c(10,20,30,40), nrow=2, ncol=2)\n```\n\n\n```{r}\n#| echo: false\n#| results: asis\n\ncat(fitb(c(30), ignore_ws = TRUE, width = \"20\"))\n\n```\n<!---\n \nTHERE ARE FROM BEFORE webexerciser\n\nSuppose we run the following code block. What will `typeof(x)` return? What about `length(x)`? Explain why.\n\n    ```r\n    x <- data.frame(x=c(1,2,3), y=c(\"a\",\"b\",\"c\"))\n    length(x)\n    ```\n\n1. Suppose we run the following code. What will `y` return? What about `typeof(y)`?\n\n    ```r\n    x <- c(2,4,6)\n    y <- x * 2   \n    ```\n\n## Coercion\n\nWhat will the following code block return? \n\n```r\nx <- c(1, 'two', 3, 4, 5, 6)\ntypeof(x)\n```\n\n\n## Subsetting\n\n\n1. Suppose `m` is a matrix created with `matrix(c(1,2,3,4), nrow=2, ncol=2)`. What will each of the following operations return?\n    - `m[c(1), ]`\n    - `m[c(2), c(1, 2)]`\n    - `m[]`\n    - `m[[2]]`\n\n1. Suppose `df` is a data frame created with `data.frame(x=c(1,2,3), y=c(\"a\",\"b\",\"c\"))`. What will each of the following operations return?\n    - `df[c(1,2)]`\n    - `df[c(1,2), c(2)]`\n    - `df[['x']]`\n    - `df[x]`\n    - `df[[2]]`\n\n1. Suppose `df` is a dataframe with column names `ageChild`, `ageParent`, and `dateAdded`. What will `df$age` return?  Explain why.\n\nSuppose we create a vector including every letter in the alphabet and assign it to `x`. What will the following code return? \n\n```r\ny <- as.logical(x)\ny[[1]]\n```\nNA or <NA> \n\n## Programming in R\n1. Explain in one sentence the difference between a `for` loop and a `while` loop?  \n--->\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css","../include/webex.css"],"toc":true,"number-sections":true,"include-in-header":["../include/webex.js"],"output-file":"lab-01.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","callout-appearance":"simple","theme":"cosmo","fontsize":"1em","linestretch":1.35,"number-depth":2,"grid":{"sidebar-width":"300px"},"title":"Lab 1: Getting started with R","subtitle":"Not graded, just practice"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}