{"title":"Lab 3: Visualize and wrangle data","markdown":{"yaml":{"title":"Lab 3: Visualize and wrangle data","subtitle":"Not graded, just practice","date":"2023-09-14","author":"Katie Schuler","number-sections":true,"number-depth":3},"headingText":"`More visualization`","containsRefs":false,"markdown":"\n\n\n```{r}\n#| echo: false\n#| message: false\n\nlibrary(webexercises)\nlibrary(tidyverse)\nlibrary(languageR)\n```\n\n\nTodays lab will make use of the `ratings` data in the `languageR` package. `glimpse()` of data frame is provided for your reference. \n\n```{r}\nratings %>% glimpse()\n```\n\n\n\nGiven code blocks a, b, and c; and the plot below:\n\n```{r}\n#| output: false\n# CODE BLOCK a ---------------------------#\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point(color = \"blue\")\n\n# CODE BLOCK b ---------------------------#\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = \"blue\")\n    ) \n\n# CODE BLOCK c ---------------------------#\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point()\n```\n\n```{r}\n#| echo: false\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point(color = \"blue\") +\n    labs(tag=\"A\")\n```\n\nWhich of the code blocks above generate plot A above?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"a\", \"b\", \"c\"\n)\n\ncat(longmcq(choices))\n```\n\nIn plot A above, is the color aesthetic mapped, set, or both? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   \"mapped\", answer=\"set\", \"both\"\n)\n\ncat(longmcq(choices))\n```\n\nIn plot A above, which of the following aesthetics should we set to make the points more transparent?\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   \"color\", \"fill\", answer=\"alpha\", \"shape\"\n)\n\ncat(longmcq(choices))\n```\n\nIn plot A above, which of the following would change the x axis label to \"FQ\"?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   answer ='add a `labs()` layer with `x=\"FQ\"` argument',\n   'add a `labs()` layer with `y=\"FQ\"` argument',\n   'change the mapping argument from `x=\"Frequency\"` to `x=\"FQ\"`' \n)\n\ncat(longmcq(choices))\n```\n\n\n```{r}\n#| echo: false\n#| message: false\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point(color = \"red\") +\n    geom_smooth(method = \"lm\") +\n    labs(tag=\"B\") \n```\n\nIn plot B above, which geom(s) are used to represent the data? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   \"geom_histogram()\", \"geom_density()\", \"geom_bar()\", answer=\"geom_point()\", answer=\"geom_smooth()\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, the blue line in plot B above is mapped to the Class aesthetic? \n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"True\", answer=\"False\")\n\ncat(longmcq(choices))\n```\n\nIn plot B above, which of the following variables is mapped to the x aesthetic? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"Frequency\", \n    \"meanFamiliarity\", \n    \"FreqSingular\",\n    \"FreqPlural\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, in plot B above, the default statistical transformation in the geom responsible for the red dots is \"identity\".\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer=\"True\", \"False\")\n\ncat(longmcq(choices))\n```\n\nSuppse we run the code below. Which of the following plots will be returned? \n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"C\", answer=\"D\"\n)\n\ncat(longmcq(choices))\n```\n\n```r\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)\n    ) +\n    geom_point() +\n    geom_smooth(method = \"lm\", color = \"red\") \n```\n\n```{r}\n#| echo: false\n#| message: false\n#| layout-ncol: 2\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)\n    ) +\n    geom_point(color = \"red\") +\n    geom_smooth(method = \"lm\") +\n    labs(tag=\"C\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)\n    ) +\n    geom_point() +\n    geom_smooth(method = \"lm\", color = \"red\") +\n    labs(tag=\"D\") \n```\n\nSuppose we run the following code block, which plot will be returned?\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"E\", answer =\"F\", \"G\", \"H\"\n)\n\ncat(longmcq(choices))\n```\n\n```r\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar() \n```\n\n```{r}\n#| echo: false\n#| message: false\n#| layout-ncol: 2\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar(position = \"dodge\") +\n    labs(tag=\"E\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar() +\n    labs(tag=\"F\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Complex, fill = Class)\n    ) +\n    geom_bar(position = \"dodge\") +\n    labs(tag=\"G\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Complex, fill = Class)\n    ) +\n    geom_bar() +\n    labs(tag=\"H\") \n```\n\nTo generate the facets in the plot below, which of the following lines of code must be included? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"`facet_grid(Complex ~ Class)`\", \n    answer=\"`facet_grid(Class ~ Complex)`\", \n    \"`facet_grid(.~ Complex)`\",\n    \"`facet_wrap(Class~Complex, ncol = 2)`\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\n```{r}\n#| echo: false\n#| message: false\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point() +\n    facet_grid(Class ~ Complex) +\n    theme_bw() +\n    labs(tag=\"I\") \n```\n\nTo adjust the size of the font to 20pt in the complete theme `theme_minimal()`, what argument should we include?\n\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`base_size(20)`\",\n    \"`size=20`\",\n    \"`font_family_size=20`\",\n    \"None of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat would happen if we added the layer `scale_fill_manual(values = c(\"green\", \"orange\"))` to the following plot? \n\n```{r}\n#| echo: false\n#| message: false\n#| layout-ncol: 2\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar(position = \"dodge\") +\n    labs(tag=\"J\") \n```\n\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"error: no fill aesthetic specified\",\n    answer =\"complex would turn green and simplex would turn orange\",\n    \"simplex would turn green and complex would turn orange\",\n    \"No change\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\n## `Data wrangling` \n\n\nWhich of the following `dplyr` functions retuns a data frame? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`select()`\", \n    answer =\"`mutate()`\", \n    answer =\"`filter()`\",\n    answer =\"`rename()`\",\n    \"None of the above\"\n)\n\ncat(longmcq(choices))\n```\n\n\nWhich of the following `dplyr` functions takes a number as their first argument? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"`select()`\", \n    \"`mutate()`\", \n    \"`filter()`\",\n    \"`rename()`\",\n    answer = \"None of the above\"\n)\n\ncat(longmcq(choices))\n```\n\n\nTrue or false, the following code blocks are equivalent. \n\n```r\n# option 1\nratings %>% select(Word, Frequency) %>% glimpse()\n\n# option 2\nglimpse(select(ratings, Word, Frequency))\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer=\"True\", \"False\")\n\ncat(longmcq(choices))\n```\n\n\n \n\nTrue or false, the following code options are equivalent \n\n\n```r\n# option 1\nratings %>% \n    select(Word:Class) %>% \n    mutate(Length/Frequency, .after = Class)\n\n# option 2\nratings %>% \n    select(Word:Class) %>% \n    mutate(Length/Frequency)\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer=\"True\", \"False\")\n\ncat(longmcq(choices))\n```\n\n\n\nRecall that there are two possible values in the `Class` variable in the `ratings` dataset: \"animal\" or \"plant\". How many rows would be in the data frame returned by the following code block? `r fitb(2, width =4)`\n\n```r \nratings %>% group_by(Class) %>% summarise(n = n())\n```\n\n\nGiven the code block in the previous question, what will `n()` do? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"summarize all classes including the letter n\",\n    answer = \"count the number of rows per Class\",\n    \"adds the string `n` before each value of Class\",\n    \"error: missing arguments to n()\"\n\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, the following code blocks will return the same dataframe\n\n```r\n# code block 1\nratings %>% select(complexity = Complex) \n\n\n# code block 2\nratings %>% rename(complexity = Complex)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"True\", answer=\"False\")\n\ncat(longmcq(choices))\n```\n\n\nWhich of the following code blocks will return a dataframe including only the rows in `ratings` for which the Class value is \"animal\"? \n\n```r\n# code block a\nratings %>% filter(Class = \"animal\")\n\n# code block b\nratings %>% filter(Class == \"animal\")\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"a\", answer=\"b\", \"both a and b\")\n\ncat(longmcq(choices))\n```\n\n\nBy default the `arrange()` function arranges the rows in ascending order. Which of the following code blocks would arrange the Frequency variable in descending order? \n\n```r\n# code block a\nratings %>% arrange(Frequency, order = \"descending\")\n\n# code block b\nratings %>% arrange(Frequency, order = \"reverse\")\n\n# code block c\nratings %>% arrange(desc(Frequency))\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"a\", \"b\", answer =\"c\", \"a and b\", \"a and c\")\n\ncat(longmcq(choices))\n```\n\n\nWhich of the following code blocks could be used to return the mean frequency by class? \n\n```r\n# code block a\nratings %>% group_by(Class) %>% summarise( mean = mean(Frequency) )\n\n# code block b\nratings %>% summarise( \n    mean = mean(Frequency), .by = c(Class) )\n\n# code block c\nratings %>% mean(Frequency) %>% group_by(Class)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"a only\", \"b only\", \"c only\", answer=\"a and b\", \"b and c\", \"a, b, and c\")\n\ncat(longmcq(choices))\n```","srcMarkdownNoYaml":"\n\n\n```{r}\n#| echo: false\n#| message: false\n\nlibrary(webexercises)\nlibrary(tidyverse)\nlibrary(languageR)\n```\n\n\nTodays lab will make use of the `ratings` data in the `languageR` package. `glimpse()` of data frame is provided for your reference. \n\n```{r}\nratings %>% glimpse()\n```\n\n## `More visualization` \n\n\nGiven code blocks a, b, and c; and the plot below:\n\n```{r}\n#| output: false\n# CODE BLOCK a ---------------------------#\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point(color = \"blue\")\n\n# CODE BLOCK b ---------------------------#\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = \"blue\")\n    ) \n\n# CODE BLOCK c ---------------------------#\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point()\n```\n\n```{r}\n#| echo: false\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point(color = \"blue\") +\n    labs(tag=\"A\")\n```\n\nWhich of the code blocks above generate plot A above?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"a\", \"b\", \"c\"\n)\n\ncat(longmcq(choices))\n```\n\nIn plot A above, is the color aesthetic mapped, set, or both? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   \"mapped\", answer=\"set\", \"both\"\n)\n\ncat(longmcq(choices))\n```\n\nIn plot A above, which of the following aesthetics should we set to make the points more transparent?\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   \"color\", \"fill\", answer=\"alpha\", \"shape\"\n)\n\ncat(longmcq(choices))\n```\n\nIn plot A above, which of the following would change the x axis label to \"FQ\"?\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   answer ='add a `labs()` layer with `x=\"FQ\"` argument',\n   'add a `labs()` layer with `y=\"FQ\"` argument',\n   'change the mapping argument from `x=\"Frequency\"` to `x=\"FQ\"`' \n)\n\ncat(longmcq(choices))\n```\n\n\n```{r}\n#| echo: false\n#| message: false\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point(color = \"red\") +\n    geom_smooth(method = \"lm\") +\n    labs(tag=\"B\") \n```\n\nIn plot B above, which geom(s) are used to represent the data? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n   \"geom_histogram()\", \"geom_density()\", \"geom_bar()\", answer=\"geom_point()\", answer=\"geom_smooth()\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, the blue line in plot B above is mapped to the Class aesthetic? \n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"True\", answer=\"False\")\n\ncat(longmcq(choices))\n```\n\nIn plot B above, which of the following variables is mapped to the x aesthetic? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer=\"Frequency\", \n    \"meanFamiliarity\", \n    \"FreqSingular\",\n    \"FreqPlural\"\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, in plot B above, the default statistical transformation in the geom responsible for the red dots is \"identity\".\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer=\"True\", \"False\")\n\ncat(longmcq(choices))\n```\n\nSuppse we run the code below. Which of the following plots will be returned? \n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"C\", answer=\"D\"\n)\n\ncat(longmcq(choices))\n```\n\n```r\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)\n    ) +\n    geom_point() +\n    geom_smooth(method = \"lm\", color = \"red\") \n```\n\n```{r}\n#| echo: false\n#| message: false\n#| layout-ncol: 2\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)\n    ) +\n    geom_point(color = \"red\") +\n    geom_smooth(method = \"lm\") +\n    labs(tag=\"C\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)\n    ) +\n    geom_point() +\n    geom_smooth(method = \"lm\", color = \"red\") +\n    labs(tag=\"D\") \n```\n\nSuppose we run the following code block, which plot will be returned?\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"E\", answer =\"F\", \"G\", \"H\"\n)\n\ncat(longmcq(choices))\n```\n\n```r\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar() \n```\n\n```{r}\n#| echo: false\n#| message: false\n#| layout-ncol: 2\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar(position = \"dodge\") +\n    labs(tag=\"E\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar() +\n    labs(tag=\"F\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Complex, fill = Class)\n    ) +\n    geom_bar(position = \"dodge\") +\n    labs(tag=\"G\") \n\nggplot(\n    data = ratings, \n    mapping = aes(x = Complex, fill = Class)\n    ) +\n    geom_bar() +\n    labs(tag=\"H\") \n```\n\nTo generate the facets in the plot below, which of the following lines of code must be included? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"`facet_grid(Complex ~ Class)`\", \n    answer=\"`facet_grid(Class ~ Complex)`\", \n    \"`facet_grid(.~ Complex)`\",\n    \"`facet_wrap(Class~Complex, ncol = 2)`\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\n```{r}\n#| echo: false\n#| message: false\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Frequency, y = meanFamiliarity)\n    ) +\n    geom_point() +\n    facet_grid(Class ~ Complex) +\n    theme_bw() +\n    labs(tag=\"I\") \n```\n\nTo adjust the size of the font to 20pt in the complete theme `theme_minimal()`, what argument should we include?\n\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`base_size(20)`\",\n    \"`size=20`\",\n    \"`font_family_size=20`\",\n    \"None of the above\"\n)\n\ncat(longmcq(choices))\n```\n\nWhat would happen if we added the layer `scale_fill_manual(values = c(\"green\", \"orange\"))` to the following plot? \n\n```{r}\n#| echo: false\n#| message: false\n#| layout-ncol: 2\n#| layout-valign: bottom\n#| cap-location: bottom\nggplot(\n    data = ratings, \n    mapping = aes(x = Class, fill = Complex)\n    ) +\n    geom_bar(position = \"dodge\") +\n    labs(tag=\"J\") \n```\n\n\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"error: no fill aesthetic specified\",\n    answer =\"complex would turn green and simplex would turn orange\",\n    \"simplex would turn green and complex would turn orange\",\n    \"No change\"\n)\n\ncat(longmcq(choices))\n```\n\n\n\n## `Data wrangling` \n\n\nWhich of the following `dplyr` functions retuns a data frame? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    answer =\"`select()`\", \n    answer =\"`mutate()`\", \n    answer =\"`filter()`\",\n    answer =\"`rename()`\",\n    \"None of the above\"\n)\n\ncat(longmcq(choices))\n```\n\n\nWhich of the following `dplyr` functions takes a number as their first argument? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"`select()`\", \n    \"`mutate()`\", \n    \"`filter()`\",\n    \"`rename()`\",\n    answer = \"None of the above\"\n)\n\ncat(longmcq(choices))\n```\n\n\nTrue or false, the following code blocks are equivalent. \n\n```r\n# option 1\nratings %>% select(Word, Frequency) %>% glimpse()\n\n# option 2\nglimpse(select(ratings, Word, Frequency))\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer=\"True\", \"False\")\n\ncat(longmcq(choices))\n```\n\n\n \n\nTrue or false, the following code options are equivalent \n\n\n```r\n# option 1\nratings %>% \n    select(Word:Class) %>% \n    mutate(Length/Frequency, .after = Class)\n\n# option 2\nratings %>% \n    select(Word:Class) %>% \n    mutate(Length/Frequency)\n\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(answer=\"True\", \"False\")\n\ncat(longmcq(choices))\n```\n\n\n\nRecall that there are two possible values in the `Class` variable in the `ratings` dataset: \"animal\" or \"plant\". How many rows would be in the data frame returned by the following code block? `r fitb(2, width =4)`\n\n```r \nratings %>% group_by(Class) %>% summarise(n = n())\n```\n\n\nGiven the code block in the previous question, what will `n()` do? \n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\n    \"summarize all classes including the letter n\",\n    answer = \"count the number of rows per Class\",\n    \"adds the string `n` before each value of Class\",\n    \"error: missing arguments to n()\"\n\n)\n\ncat(longmcq(choices))\n```\n\nTrue or false, the following code blocks will return the same dataframe\n\n```r\n# code block 1\nratings %>% select(complexity = Complex) \n\n\n# code block 2\nratings %>% rename(complexity = Complex)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"True\", answer=\"False\")\n\ncat(longmcq(choices))\n```\n\n\nWhich of the following code blocks will return a dataframe including only the rows in `ratings` for which the Class value is \"animal\"? \n\n```r\n# code block a\nratings %>% filter(Class = \"animal\")\n\n# code block b\nratings %>% filter(Class == \"animal\")\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"a\", answer=\"b\", \"both a and b\")\n\ncat(longmcq(choices))\n```\n\n\nBy default the `arrange()` function arranges the rows in ascending order. Which of the following code blocks would arrange the Frequency variable in descending order? \n\n```r\n# code block a\nratings %>% arrange(Frequency, order = \"descending\")\n\n# code block b\nratings %>% arrange(Frequency, order = \"reverse\")\n\n# code block c\nratings %>% arrange(desc(Frequency))\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"a\", \"b\", answer =\"c\", \"a and b\", \"a and c\")\n\ncat(longmcq(choices))\n```\n\n\nWhich of the following code blocks could be used to return the mean frequency by class? \n\n```r\n# code block a\nratings %>% group_by(Class) %>% summarise( mean = mean(Frequency) )\n\n# code block b\nratings %>% summarise( \n    mean = mean(Frequency), .by = c(Class) )\n\n# code block c\nratings %>% mean(Frequency) %>% group_by(Class)\n```\n\n```{r}\n#| echo: false\n#| results: asis\n\n# Define the answer choices\nchoices <- c(\"a only\", \"b only\", \"c only\", answer=\"a and b\", \"b and c\", \"a, b, and c\")\n\ncat(longmcq(choices))\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css","../include/webex.css"],"toc":true,"number-sections":true,"include-in-header":["../include/webex.js"],"output-file":"lab-03.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","callout-appearance":"simple","theme":"cosmo","fontsize":"1em","linestretch":1.35,"number-depth":3,"grid":{"sidebar-width":"300px"},"title":"Lab 3: Visualize and wrangle data","subtitle":"Not graded, just practice","date":"2023-09-14","author":"Katie Schuler"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}