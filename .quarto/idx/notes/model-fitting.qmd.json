{"title":"Model fitting","markdown":{"yaml":{"title":"Model fitting","author":["Katie Schuler"],"date":"2023-10-05"},"headingText":"setup data","containsRefs":false,"markdown":"\n\n::: {.callout-warning title=\"Under Construction\"}\n:::\n\n```{r}\n#| echo: false\n#| message: false\nlibrary(tidyverse)\nlibrary(modelr)\nlibrary(infer)\nlibrary(knitr)\ntheme_set(theme_classic(base_size = 20))\n\ndata <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(1.2, 2.5, 2.3, 3.1, 4.4)\n)\n\ndata2 <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(2, 2.5, 3.3, 4.1, 6.4)\n\n\n)\n\n```\n\n## You are here\n\n## Model building \n\n## Linear model review\n\n- how would we specify this model \n- how would we write it in R \n\n- estimate the free paramters \n\n## Estimate free parameters\n\n```{r}\n\n# with base R \nlm(y ~ 1 + x, data = data)\n\n\n# with infer workflow \ndata %>%\n    specify(y ~ 1 + x) %>%\n    fit()\n\n\n```\n\n\n\n## Model fitting basics\n\n\nLinear model \n\n```{r}\n#| echo: false\n#| layout-ncol: 2\ndata <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(1.2, 2.5, 2.3, 3.1, 4.4)\n)\n\ndata2 <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(2, 2.5, 3.3, 4.1, 6.4)\n\n\n)\n\nprint(data)\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\")\n\n\n```\n\nWe can see which fits better with our eyes. \n\n```{r}\n#| echo: false\n#| layout-ncol: 2\n#| layout-nrow: 3\n\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(method = \"lm\", formula = 'y ~ x', se = FALSE) +\ncoord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"A\", title = \"Fits well\")\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(\n    data = data2, \n    mapping = aes(x = x, y = y), \n    method = \"lm\", formula = \"y ~ x\", se = FALSE) +\n    coord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"B\", title = \"Fits poorly\")\n\n```\n\n```{r}\n#| echo: false\n#| layout-ncol: 2\n#| layout-nrow: 3\n\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(method = \"lm\", formula = 'y ~ x', se = FALSE) +\ncoord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"A\", title = \"Low MSE\")\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(\n    data = data2, \n    mapping = aes(x = x, y = y), \n    method = \"lm\", formula = \"y ~ x\", se = FALSE) +\n    coord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"B\", title = \"High MSE\")\n\nmodelA <- lm(y ~ x, data = data)\nmodelB <- lm(y ~ x, data = data2)\n\nmseA <- data %>% add_predictions(modelA) %>%\n    mutate(err = y - pred, sq_err = err^2)\nkable(mseA)\n\nmseB <- data %>% add_predictions(modelB) %>%\n    mutate(err = y - pred, sq_err = err^2)\nkable(mseB)\n\n\n\n```\n\n\n```{r}\nmean(mseA$sq_err)\nmean(mseB$sq_err)\n```\n\n```{r}\n#| echo: false\n#| layout-ncol: 2\n\nggplot(mseA, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(method = \"lm\", formula = 'y ~ x', se = FALSE) +\ngeom_segment(aes(xend = x, yend = pred)) +\ncoord_cartesian(ylim = c(0, 7))  +\nlabs(tag = \"A\", title = \"Low MSE\")\n\n\n\nggplot(mseB, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(\n    data = data2, \n    mapping = aes(x = x, y = y), \n    method = \"lm\", formula = \"y ~ x\", se = FALSE) +\n    geom_segment(aes(xend = x, yend = pred)) +\n    coord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"B\", title = \"High MSE\")\n\n\n\n```\n\n\n\n\n\n\n```{r}\n\nlm(y ~ 1 + x, data = data)\n\ndata %>%\n    specify(y ~ 1 + x) %>%\n    fit()\n\n\n\n\n```\n\n\n```{r}\nb0 <- seq(from = 0, to = 3, by = 0.1)\nb1 <- seq(from = 0, to = 3, by = 0.1)\npossible_weights <- expand.grid(b0 = b0, b1 = b1)\n\nggplot(data = possible_weights, \n    mapping = aes(x = b0, y = b1)) +\n    geom_point()\n\n\n# compute the sum of squares for those weights on a dataframe\nsum_squares <- function(b0, b1) {\n\n    data %>% \n        mutate(pred = b0 + b1*x) %>%\n        mutate(err = pred-y) %>%\n        mutate(sq_err = err^2) %>%\n        select(sq_err) %>%\n        sum()\n   \n}\nerror_surf <- possible_weights %>% \n    rowwise() %>%\n    mutate(sum_sq =  sum_squares(b0, b1)) %>%\n    ungroup\n\nerror_surf\n\nerror_surf  %>% filter(sum_sq < 0.608)\n\nggplot(error_surf, aes(b0, b1, z = sum_sq)) +\n    geom_contour_filled()\n\n    \n        \n        # %>%\n        # sum(.$sq_err)\n       # summarise(sum_sq = sum(sq_err)) %>%\n\n\n# return sum of squares as a column next to \n\n# mse <- function(data, b0, b1) {\n#   model_value <- b0 + b1*data[1]\n#   resid <- data[2] - model_value\n#   sq_err <- resid^2\n#   sum(sq_err)\n# }\n\n# possible_weights %>% mutate(\n#     mse = mse(1, 1, b0, b1)\n# )\n\n```\n\n- in context of model building more broadly \n- a genear overview of the concept \n\n## Mean squared error \n\nCost function. \n\n## Error surface\n\n- We can visualize the error surface for simple example: 2 parameters, $\\beta_0$ and $\\beta_1$, and the cost function (mean square error). \n- Show nonlinear model v linear model figs \n- goal is to find the minimum point\n- notice the nonlinear model can have local minimums but lm has only 1. Because lm is a **convex** function. \n\n## Gradient descent \n\nIF we want to estimate the free parameters in a way that would work broadly, for linear or nonlinear models, we can use **gradient descent**. \n\n- machine learning / optimization. \n- If we have a lot of data, we could use **stochastic gradient descent** which is the same except we... \n\n## Ordinary least squares \n\nAs we saw above, linear models have the special property that they have a solution, the OLS. Rather than searching the error surface iteratively via gradient descent (optimization), we can solve for this point directly with **linear algebra**. \n\n- matrix approach: we write the 3-step function. \n- use lm() in R. \n- infer approach: \n    - specify(), fit() \n\n\n\n### Further reading \n\n- [Ch. 8 Fitting models to data](https://dtkaplan.github.io/SM2-bookdown/fitting-models-to-data.html) in Statistical Modeling\n\n\n\n","srcMarkdownNoYaml":"\n\n::: {.callout-warning title=\"Under Construction\"}\n:::\n\n```{r}\n#| echo: false\n#| message: false\nlibrary(tidyverse)\nlibrary(modelr)\nlibrary(infer)\nlibrary(knitr)\ntheme_set(theme_classic(base_size = 20))\n\n# setup data \ndata <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(1.2, 2.5, 2.3, 3.1, 4.4)\n)\n\ndata2 <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(2, 2.5, 3.3, 4.1, 6.4)\n\n\n)\n\n```\n\n## You are here\n\n## Model building \n\n## Linear model review\n\n- how would we specify this model \n- how would we write it in R \n\n- estimate the free paramters \n\n## Estimate free parameters\n\n```{r}\n\n# with base R \nlm(y ~ 1 + x, data = data)\n\n\n# with infer workflow \ndata %>%\n    specify(y ~ 1 + x) %>%\n    fit()\n\n\n```\n\n\n\n## Model fitting basics\n\n\nLinear model \n\n```{r}\n#| echo: false\n#| layout-ncol: 2\ndata <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(1.2, 2.5, 2.3, 3.1, 4.4)\n)\n\ndata2 <- tibble(\n    x = c(1, 2, 3, 4, 5),\n    y = c(2, 2.5, 3.3, 4.1, 6.4)\n\n\n)\n\nprint(data)\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\")\n\n\n```\n\nWe can see which fits better with our eyes. \n\n```{r}\n#| echo: false\n#| layout-ncol: 2\n#| layout-nrow: 3\n\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(method = \"lm\", formula = 'y ~ x', se = FALSE) +\ncoord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"A\", title = \"Fits well\")\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(\n    data = data2, \n    mapping = aes(x = x, y = y), \n    method = \"lm\", formula = \"y ~ x\", se = FALSE) +\n    coord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"B\", title = \"Fits poorly\")\n\n```\n\n```{r}\n#| echo: false\n#| layout-ncol: 2\n#| layout-nrow: 3\n\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(method = \"lm\", formula = 'y ~ x', se = FALSE) +\ncoord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"A\", title = \"Low MSE\")\n\n\nggplot(data, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(\n    data = data2, \n    mapping = aes(x = x, y = y), \n    method = \"lm\", formula = \"y ~ x\", se = FALSE) +\n    coord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"B\", title = \"High MSE\")\n\nmodelA <- lm(y ~ x, data = data)\nmodelB <- lm(y ~ x, data = data2)\n\nmseA <- data %>% add_predictions(modelA) %>%\n    mutate(err = y - pred, sq_err = err^2)\nkable(mseA)\n\nmseB <- data %>% add_predictions(modelB) %>%\n    mutate(err = y - pred, sq_err = err^2)\nkable(mseB)\n\n\n\n```\n\n\n```{r}\nmean(mseA$sq_err)\nmean(mseB$sq_err)\n```\n\n```{r}\n#| echo: false\n#| layout-ncol: 2\n\nggplot(mseA, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(method = \"lm\", formula = 'y ~ x', se = FALSE) +\ngeom_segment(aes(xend = x, yend = pred)) +\ncoord_cartesian(ylim = c(0, 7))  +\nlabs(tag = \"A\", title = \"Low MSE\")\n\n\n\nggplot(mseB, aes(x = x, y = y)) +\ngeom_point(size = 4, color = \"darkred\") +\ngeom_smooth(\n    data = data2, \n    mapping = aes(x = x, y = y), \n    method = \"lm\", formula = \"y ~ x\", se = FALSE) +\n    geom_segment(aes(xend = x, yend = pred)) +\n    coord_cartesian(ylim = c(0, 7)) +\nlabs(tag = \"B\", title = \"High MSE\")\n\n\n\n```\n\n\n\n\n\n\n```{r}\n\nlm(y ~ 1 + x, data = data)\n\ndata %>%\n    specify(y ~ 1 + x) %>%\n    fit()\n\n\n\n\n```\n\n\n```{r}\nb0 <- seq(from = 0, to = 3, by = 0.1)\nb1 <- seq(from = 0, to = 3, by = 0.1)\npossible_weights <- expand.grid(b0 = b0, b1 = b1)\n\nggplot(data = possible_weights, \n    mapping = aes(x = b0, y = b1)) +\n    geom_point()\n\n\n# compute the sum of squares for those weights on a dataframe\nsum_squares <- function(b0, b1) {\n\n    data %>% \n        mutate(pred = b0 + b1*x) %>%\n        mutate(err = pred-y) %>%\n        mutate(sq_err = err^2) %>%\n        select(sq_err) %>%\n        sum()\n   \n}\nerror_surf <- possible_weights %>% \n    rowwise() %>%\n    mutate(sum_sq =  sum_squares(b0, b1)) %>%\n    ungroup\n\nerror_surf\n\nerror_surf  %>% filter(sum_sq < 0.608)\n\nggplot(error_surf, aes(b0, b1, z = sum_sq)) +\n    geom_contour_filled()\n\n    \n        \n        # %>%\n        # sum(.$sq_err)\n       # summarise(sum_sq = sum(sq_err)) %>%\n\n\n# return sum of squares as a column next to \n\n# mse <- function(data, b0, b1) {\n#   model_value <- b0 + b1*data[1]\n#   resid <- data[2] - model_value\n#   sq_err <- resid^2\n#   sum(sq_err)\n# }\n\n# possible_weights %>% mutate(\n#     mse = mse(1, 1, b0, b1)\n# )\n\n```\n\n- in context of model building more broadly \n- a genear overview of the concept \n\n## Mean squared error \n\nCost function. \n\n## Error surface\n\n- We can visualize the error surface for simple example: 2 parameters, $\\beta_0$ and $\\beta_1$, and the cost function (mean square error). \n- Show nonlinear model v linear model figs \n- goal is to find the minimum point\n- notice the nonlinear model can have local minimums but lm has only 1. Because lm is a **convex** function. \n\n## Gradient descent \n\nIF we want to estimate the free parameters in a way that would work broadly, for linear or nonlinear models, we can use **gradient descent**. \n\n- machine learning / optimization. \n- If we have a lot of data, we could use **stochastic gradient descent** which is the same except we... \n\n## Ordinary least squares \n\nAs we saw above, linear models have the special property that they have a solution, the OLS. Rather than searching the error surface iteratively via gradient descent (optimization), we can solve for this point directly with **linear algebra**. \n\n- matrix approach: we write the 3-step function. \n- use lm() in R. \n- infer approach: \n    - specify(), fit() \n\n\n\n### Further reading \n\n- [Ch. 8 Fitting models to data](https://dtkaplan.github.io/SM2-bookdown/fitting-models-to-data.html) in Statistical Modeling\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css","../include/webex.css"],"toc":true,"number-sections":true,"include-in-header":["../include/webex.js"],"output-file":"model-fitting.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","callout-appearance":"simple","theme":"cosmo","fontsize":"1em","linestretch":1.35,"number-depth":2,"grid":{"sidebar-width":"300px"},"title":"Model fitting","author":["Katie Schuler"],"date":"2023-10-05"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}