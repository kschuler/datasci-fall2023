---
layout: post
title:  "Lab 1: Getting started with R"
subtitle: "Not graded, just practice"

---

To learn to program in R (or any language), you can read about how to do it, and watch someone else do it; but the only way to really learn is to do it yourself. Create some data structures, try some stuff, and see what happens! Here are some practice quiz questions to guide your learning. We will go over the solutions to these in lab.

```{r}
#| code-fold: true
#| code-summary: Setup code

# dynamic exercises made possible with webexercises
library(webexercises)

```

## Google Colab


```{r}
#| echo: false
#| results: asis

# Define the question
question <- "True or false? We start a new R notebook in Google Colab with `File > New notebook`"

# # Define the answer choices
choices <- c(
    "True",
    answer = "False"
)

cat(question,longmcq(choices))

```

For problem sets, how will you submit your colab notebook for grading? 

```{r}
#| echo: false
#| results: asis

# # Define the answer choices
choices <- c(
    answer ="`File > Download > Download .ipynb`, then upload to Gradescope",
    "`File > Download > Download .ipynb`, then upload to Canvas",
    "`File > Download > Download .py`, then upload to Gradescope",
    "`File > Download > Download .py`, then upload to Canvas"

)

cat(longmcq(choices))

```

What version of R is Google Colab running? Hint: see `sessionInfo()` function.

```{r}
#| echo: false
#| results: asis

cat(fitb(c("4.3.1"), ignore_ws = TRUE, width = "20"))

```

## R Basics


Which of the following are expressions? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer ="10",
    answer = "5 + 10",
    answer ="x <- 5 + 10",
    answer = "x <- y + 10",
    answer = "mean(x)"

)

cat(longmcq(choices))

```

Which of the following are valid variable names in R? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer ="childAge",
    answer = "response_time",
    "1stPlaceWinner",
    "2fast2furious",
     "pi"

)

cat(longmcq(choices))

```


Suppose we open a new colab notebook and run the following code block. What will `ls()` return? 

```r
x <- mean(c(1,3,5))
y <- median(c(1,3,5))
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(

    "3",
    "x=3 • y=3",
    answer ="'x' • 'y' ",
    "mean(c(1,3,5)) • median(c(1,3,5))"

)

cat(longmcq(choices))

```

Which of the following will load the `emo` package into the current environment? 


```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(

    "install.packages('emo')",
    answer ="library(emo)",
    "library('emo')",
    "data(emo)"

)

cat(longmcq(choices))

```




## Vectors

1. The expression `attributes(x)` returns the following result. What will `typeof(x)` return?  

    > `$dim= 2 . 2`

1. Suppose we run the following code block. What will `typeof(x)` return? 

    ```r
    x <- c()
    ```


1. Explain in one sentence the difference between an atomic vector and a list. 

1. Suppose we run the following code block. What will `typeof(x)` return? What about `length(x)`? Explain why.

    ```r
    x <- data.frame(x=c(1,2,3), y=c("a","b","c"))
    ```

1. Suppose we run the following code. What will `y` return? What about `typeof(y)`?

    ```r
    x <- c(2,4,6)
    y <- x * 2   
    ```

## Subsetting
1. Suppose we run the following code. What will each of operations return (a - e)? 

    ```r
    x <- seq(2:8, by=2)
    ```
    a. `x[c(2,4)]`
    b. `x[-c(2,4)]`
    c. `x[]`
    d. `x[[2]]`
    e. `x[2]`

1. Suppose `m` is a matrix created with `matrix(c(1,2,3,4), nrow=2, ncol=2)`. What will each of the following operations return?
    - `m[c(1), ]`
    - `m[c(2), c(1, 2)]`
    - `m[]`
    - `m[[2]]`

1. Suppose `df` is a data frame created with `data.frame(x=c(1,2,3), y=c("a","b","c"))`. What will each of the following operations return?
    - `df[c(1,2)]`
    - `df[c(1,2), c(2)]`
    - `df[['x']]`
    - `df[x]`
    - `df[[2]]`

1. Suppose `df` is a dataframe with column names `ageChild`, `ageParent`, and `dateAdded`. What will `df$age` return?  Explain why.

## Programming in R
1. Explain in one sentence the difference between a `for` loop and a `while` loop? 
