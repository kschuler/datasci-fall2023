---
title:  "Lab 3: Visualize and wrangle data"
subtitle: "Not graded, just practice"
date:   2023-09-14
author: Katie Schuler
number-sections: true
number-depth: 3
---


```{r}
#| echo: false
#| message: false

library(webexercises)
library(tidyverse)
library(languageR)
```


Todays lab will make use of the `ratings` data in the `languageR` package. `glimpse()` of data frame is provided for your reference. 

```{r}
ratings %>% glimpse()
```

## `More visualization` 


Given code blocks a, b, and c; and the plot below:

```{r}
#| output: false
# CODE BLOCK a ---------------------------#
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity)
    ) +
    geom_point(color = "blue")

# CODE BLOCK b ---------------------------#
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity, color = "blue")
    ) 

# CODE BLOCK c ---------------------------#
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity)
    ) +
    geom_point()
```

```{r}
#| echo: false
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity)
    ) +
    geom_point(color = "blue") +
    labs(tag="A")
```

Which of the code blocks above generate plot A above?

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer="a", "b", "c"
)

cat(longmcq(choices))
```

In plot A above, is the color aesthetic mapped, set, or both? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
   "mapped", answer="set", "both"
)

cat(longmcq(choices))
```

In plot A above, which of the following aesthetics should we set to make the points more transparent?


```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
   "color", "fill", answer="alpha", "shape"
)

cat(longmcq(choices))
```

In plot A above, which of the following would change the x axis label to "FQ"?

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
   answer ='add a `labs()` layer with `x="FQ"` argument',
   'add a `labs()` layer with `y="FQ"` argument',
   'change the mapping argument from `x="Frequency"` to `x="FQ"`' 
)

cat(longmcq(choices))
```


```{r}
#| echo: false
#| message: false
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity)
    ) +
    geom_point(color = "red") +
    geom_smooth(method = "lm") +
    labs(tag="B") 
```

In plot B above, which geom(s) are used to represent the data? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
   "geom_histogram()", "geom_density()", "geom_bar()", answer="geom_point()", answer="geom_smooth()"
)

cat(longmcq(choices))
```

True or false, the blue line in plot B above is mapped to the Class aesthetic? 


```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c("True", answer="False")

cat(longmcq(choices))
```

In plot B above, which of the following variables is mapped to the x aesthetic? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer="Frequency", 
    "meanFamiliarity", 
    "FreqSingular",
    "FreqPlural"
)

cat(longmcq(choices))
```

True or false, in plot B above, the default statistical transformation in the geom responsible for the red dots is "identity".

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(answer="True", "False")

cat(longmcq(choices))
```

Suppse we run the code below. Which of the following plots will be returned? 


```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer="C", "D"
)

cat(longmcq(choices))
```

```r
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)
    ) +
    geom_point() +
    geom_smooth(method = "lm", color = "red") 
```

```{r}
#| echo: false
#| message: false
#| layout-ncol: 2
#| layout-valign: bottom
#| cap-location: bottom
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)
    ) +
    geom_point(color = "red") +
    geom_smooth(method = "lm") +
    labs(tag="C") 

ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity, color = Class)
    ) +
    geom_point() +
    geom_smooth(method = "lm", color = "red") +
    labs(tag="D") 
```

Suppose we run the following code block, which plot will be returned?


```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "E", answer ="F", "G", "H"
)

cat(longmcq(choices))
```

```r
ggplot(
    data = ratings, 
    mapping = aes(x = Class, fill = Complex)
    ) +
    geom_bar() 
```

```{r}
#| echo: false
#| message: false
#| layout-ncol: 2
#| layout-valign: bottom
#| cap-location: bottom
ggplot(
    data = ratings, 
    mapping = aes(x = Class, fill = Complex)
    ) +
    geom_bar(position = "dodge") +
    labs(tag="E") 

ggplot(
    data = ratings, 
    mapping = aes(x = Class, fill = Complex)
    ) +
    geom_bar() +
    labs(tag="F") 

ggplot(
    data = ratings, 
    mapping = aes(x = Complex, fill = Class)
    ) +
    geom_bar(position = "dodge") +
    labs(tag="G") 

ggplot(
    data = ratings, 
    mapping = aes(x = Complex, fill = Class)
    ) +
    geom_bar() +
    labs(tag="H") 
```

To generate the facets in the plot below, which of the following lines of code must be included? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "`facet_grid(Complex ~ Class)`", 
    answer="`facet_grid(Class ~ Complex)`", 
    "`facet_grid(.~ Complex)`",
    "`facet_wrap(Class~Complex, ncol = 2)`"
)

cat(longmcq(choices))
```



```{r}
#| echo: false
#| message: false
#| layout-valign: bottom
#| cap-location: bottom
ggplot(
    data = ratings, 
    mapping = aes(x = Frequency, y = meanFamiliarity)
    ) +
    geom_point() +
    facet_grid(Class ~ Complex) +
    theme_bw() +
    labs(tag="I") 
```

To adjust the size of the font to 20pt in the complete theme `theme_minimal()`, what argument should we include?



```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer ="`base_size(20)`",
    "`size=20`",
    "`font_family_size=20`",
    "None of the above"
)

cat(longmcq(choices))
```

What would happen if we added the layer `scale_fill_manual(values = c("green", "orange"))` to the following plot? 

```{r}
#| echo: false
#| message: false
#| layout-ncol: 2
#| layout-valign: bottom
#| cap-location: bottom
ggplot(
    data = ratings, 
    mapping = aes(x = Class, fill = Complex)
    ) +
    geom_bar(position = "dodge") +
    labs(tag="J") 
```



```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "error: no fill aesthetic specified",
    answer ="complex would turn green and simplex would turn orange",
    "simplex would turn green and complex would turn orange",
    "No change"
)

cat(longmcq(choices))
```



## `Data wrangling` 


Which of the following `dplyr` functions retuns a data frame? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer ="`select()`", 
    answer ="`mutate()`", 
    answer ="`filter()`",
    answer ="`rename()`",
    "None of the above"
)

cat(longmcq(choices))
```


Which of the following `dplyr` functions takes a number as their first argument? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "`select()`", 
    "`mutate()`", 
    "`filter()`",
    "`rename()`",
    answer = "None of the above"
)

cat(longmcq(choices))
```


True or false, the following code blocks are equivalent. 

```r
# option 1
ratings %>% select(Word, Frequency) %>% glimpse()

# option 2
glimpse(select(ratings, Word, Frequency))

```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(answer="True", "False")

cat(longmcq(choices))
```


 

True or false, the following code options are equivalent 


```r
# option 1
ratings %>% 
    select(Word:Class) %>% 
    mutate(Length/Frequency, .after = Class)

# option 2
ratings %>% 
    select(Word:Class) %>% 
    mutate(Length/Frequency)

```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(answer="True", "False")

cat(longmcq(choices))
```



Recall that there are two possible values in the `Class` variable in the `ratings` dataset: "animal" or "plant". How many rows would be in the data frame returned by the following code block? `r fitb(2, width =4)`

```r 
ratings %>% group_by(Class) %>% summarise(n = n())
```


Given the code block in the previous question, what will `n()` do? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "summarize all classes including the letter n",
    answer = "count the number of rows per Class",
    "adds the string `n` before each value of Class",
    "error: missing arguments to n()"

)

cat(longmcq(choices))
```

True or false, the following code blocks will return the same dataframe

```r
# code block 1
ratings %>% select(complexity = Complex) 


# code block 2
ratings %>% rename(complexity = Complex)
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c("True", answer="False")

cat(longmcq(choices))
```


Which of the following code blocks will return a dataframe including only the rows in `ratings` for which the Class value is "animal"? 

```r
# code block a
ratings %>% filter(Class = "animal")

# code block b
ratings %>% filter(Class == "animal")
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c("a", answer="b", "both a and b")

cat(longmcq(choices))
```


By default the `arrange()` function arranges the rows in ascending order. Which of the following code blocks would arrange the Frequency variable in descending order? 

```r
# code block a
ratings %>% arrange(Frequency, order = "descending")

# code block b
ratings %>% arrange(Frequency, order = "reverse")

# code block c
ratings %>% arrange(desc(Frequency))
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c("a", "b", answer ="c", "a and b", "a and c")

cat(longmcq(choices))
```


Which of the following code blocks could be used to return the mean frequency by class? 

```r
# code block a
ratings %>% group_by(Class) %>% summarise( mean = mean(Frequency) )

# code block b
ratings %>% summarise( 
    mean = mean(Frequency), .by = c(Class) )

# code block c
ratings %>% mean(Frequency) %>% group_by(Class)
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c("a only", "b only", "c only", answer="a and b", "b and c", "a, b, and c")

cat(longmcq(choices))
```