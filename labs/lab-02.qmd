---
title:  "Lab 2: Import and visualize data"
subtitle: "Not graded, just practice"
date:   2023-09-07
author: Katie Schuler
---


```{r}
#| echo: false

library(webexercises)
```

## Tidyverse

What is the relationship between tidyverse and readr? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "tidyverse is a package in the readr family of packages", 
    answer ="readr is a package in the tidyverse family of packages",
    "tidyverse and readr are two unrelated packages",
    "tidyverse and reader are two names for the same package"
)

cat(longmcq(choices))
```

In the tidyverse, what does "tidy data" refer to? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "any data we load into the tidyverse",
    "a dataset with no missing values",
    answer="a standard way to organize a dataset",
    "the process of cleaning a dataset"
)

cat(longmcq(choices))
```

What is the purpose of the `purrr` package? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "Data visualization",
    "Data wrangling",
    "Data importing",
    answer="Functional programming",
    "All of the above"
)

cat(longmcq(choices))
```

What is the primary purpose of the `readr` package? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "Data visualization",
    "Data wrangling",
    answer="Data importing",
    "Functional programming",
    "All of the above"
)

cat(longmcq(choices))
```

Which of the following returned this message? 

```{r}
#| echo: false

library(tidyverse)
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    answer="`library(tidyverse)`",
    "`family(tidyverse)`",
    "`library.collection(tidyverse)`",
    "`library(tidyverse, report=TRUE)`"
)

cat(longmcq(choices))
```


## purrr 

Suppose we have the following tibble, stored with the variable `df`. What will `map(df, mean)` return? 

```{r}
#| echo: false

df <- tibble(
    x = 1:4,
    y = 5:8,
    z = 9:12
)
print(df)
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "the mean of each row",
    answer="the mean of each column",
    "the mean of all values",
    "Error: cannot compute mean of type integer"
)

cat(longmcq(choices))
```


Suppose we wanted to coerce each column in the previous tibble to the data type `double` with one line of code. Fill in the two arguments to `map` that would accomplish this: 

- map(`r fitb("df", width = 10)`, `r fitb("as.double", width = 10)`)



## Tibbles

Suppose we run the following code block. What will `is.data.frame(tib)` return? 

```r
tib <- tibble(x = 1:2, y = c("a", "b"))
```

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(answer ="True","False")

cat(longmcq(choices))
```

What will `typeof(tib)` return? 

```{r}
#| echo: false
#| results: asis

# Define the answer choices
choices <- c(
    "double", 
    "character",
    "`double` â€¢ `character`",
    answer ="list",
    "tibble",
    "data.frame"
)

cat(longmcq(choices))
```

Given the following `df` how do we convert 

- as_tibble()

Suppose we run `tribble`, what will is_tibble() return? 

- True

Suppose we run tib$a, what will return?

- an error
- age via a partial match 
- cell a 
- all cells matching a 

Suppose `x[[5]]` returns `NULL`, what will `is_tibble(x)` return? 

## readr 

as csv; as table



What does the csv in `read_csv()` stand for? Fill in the blank 

- [comma] separated values 

Suppose we have attempt to import the following csv file with the code below. What will be the result? 

TABLE 

```r
code that specifies column col_type 
```

We import, but we were expecting col x to be a double. Which argument should we specify to fix this issue? 

- NA 

Col names question; we import; how do we refer to them? 

col names question; how do we repair them? 

True or false, we can use readr to import a google sheet: 

- True
- False 


## Data visualization

::: {.callout-warning title="Under Construction"}
:::
